{"ast":null,"code":"import _objectSpread from\"/Users/evik/kl/project-2024/klasmart-assessment-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/evik/kl/project-2024/klasmart-assessment-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"label\"];import{useSnackbar}from\"notistack\";import{useEffect,useMemo}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{actRemove}from\"../../reducers/notify\";// 对当前显示队列的操作要保证原子性，所有将队列保存在本地，保证同步原子操作\nvar sourceMessages={};var getDiffMessage=function getDiffMessage(targetMessages){var removed=Object.values(sourceMessages).filter(function(message){return!targetMessages[message.key];});var added=Object.values(targetMessages).filter(function(message){return!sourceMessages[message.key];});return{removed:removed,added:added};};var defaultOptions={autoHideDuration:2000,anchorOrigin:{horizontal:\"right\",vertical:\"top\"}};export function Notification(){var targetMessages=useSelector(function(state){return state.notify;});var dispatch=useDispatch();var _useMemo=useMemo(function(){return getDiffMessage(targetMessages);},[targetMessages]),added=_useMemo.added,removed=_useMemo.removed;var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar,closeSnackbar=_useSnackbar.closeSnackbar;useEffect(function(){added.forEach(function(message){var label=message.label,options=_objectWithoutProperties(message,_excluded);var onExit=function onExit(elm,key){delete sourceMessages[key];dispatch(actRemove(key));};enqueueSnackbar(label,_objectSpread(_objectSpread(_objectSpread({},defaultOptions),options),{},{onExit:onExit}));sourceMessages[message.key]=message;});removed.forEach(function(_ref){var key=_ref.key;closeSnackbar(key);delete sourceMessages[key];});},[added,removed,dispatch,enqueueSnackbar,closeSnackbar]);return null;}","map":{"version":3,"names":["useSnackbar","useEffect","useMemo","useDispatch","useSelector","actRemove","sourceMessages","getDiffMessage","targetMessages","removed","Object","values","filter","message","key","added","defaultOptions","autoHideDuration","anchorOrigin","horizontal","vertical","Notification","state","notify","dispatch","enqueueSnackbar","closeSnackbar","forEach","label","options","onExit","elm"],"sources":["/Users/evik/kl/project-2024/klasmart-assessment-frontend/src/components/Notification/index.tsx"],"sourcesContent":["import { OptionsObject, TransitionHandler, useSnackbar } from \"notistack\";\nimport { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../../reducers\";\nimport { actRemove } from \"../../reducers/notify\";\n\ntype MessageHash = RootState[\"notify\"];\n\n// 对当前显示队列的操作要保证原子性，所有将队列保存在本地，保证同步原子操作\nconst sourceMessages: MessageHash = {};\n\nconst getDiffMessage = (targetMessages: MessageHash) => {\n  const removed = Object.values(sourceMessages).filter((message) => !targetMessages[message.key]);\n  const added = Object.values(targetMessages).filter((message) => !sourceMessages[message.key]);\n  return { removed, added };\n};\n\nconst defaultOptions: OptionsObject = {\n  autoHideDuration: 2000,\n  anchorOrigin: {\n    horizontal: \"right\",\n    vertical: \"top\",\n  },\n};\n\nexport function Notification() {\n  const targetMessages = useSelector<RootState, MessageHash>((state) => state.notify);\n  const dispatch = useDispatch();\n  const { added, removed } = useMemo(() => getDiffMessage(targetMessages), [targetMessages]);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  useEffect(() => {\n    added.forEach((message) => {\n      const { label, ...options } = message;\n      const onExit: TransitionHandler = (elm, key) => {\n        delete sourceMessages[key];\n        dispatch(actRemove(key));\n      };\n      enqueueSnackbar(label, { ...defaultOptions, ...options, onExit });\n      sourceMessages[message.key] = message;\n    });\n    removed.forEach(({ key }) => {\n      closeSnackbar(key);\n      delete sourceMessages[key];\n    });\n  }, [added, removed, dispatch, enqueueSnackbar, closeSnackbar]);\n  return null;\n}\n"],"mappings":"uUAAA,OAA2CA,WAA3C,KAA8D,WAA9D,CACA,OAASC,SAAT,CAAoBC,OAApB,KAAmC,OAAnC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,SAAT,KAA0B,uBAA1B,CAIA;AACA,GAAMC,CAAAA,cAA2B,CAAG,EAApC,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,cAAD,CAAiC,CACtD,GAAMC,CAAAA,OAAO,CAAGC,MAAM,CAACC,MAAP,CAAcL,cAAd,EAA8BM,MAA9B,CAAqC,SAACC,OAAD,QAAa,CAACL,cAAc,CAACK,OAAO,CAACC,GAAT,CAA5B,EAArC,CAAhB,CACA,GAAMC,CAAAA,KAAK,CAAGL,MAAM,CAACC,MAAP,CAAcH,cAAd,EAA8BI,MAA9B,CAAqC,SAACC,OAAD,QAAa,CAACP,cAAc,CAACO,OAAO,CAACC,GAAT,CAA5B,EAArC,CAAd,CACA,MAAO,CAAEL,OAAO,CAAPA,OAAF,CAAWM,KAAK,CAALA,KAAX,CAAP,CACD,CAJD,CAMA,GAAMC,CAAAA,cAA6B,CAAG,CACpCC,gBAAgB,CAAE,IADkB,CAEpCC,YAAY,CAAE,CACZC,UAAU,CAAE,OADA,CAEZC,QAAQ,CAAE,KAFE,CAFsB,CAAtC,CAQA,MAAO,SAASC,CAAAA,YAAT,EAAwB,CAC7B,GAAMb,CAAAA,cAAc,CAAGJ,WAAW,CAAyB,SAACkB,KAAD,QAAWA,CAAAA,KAAK,CAACC,MAAjB,EAAzB,CAAlC,CACA,GAAMC,CAAAA,QAAQ,CAAGrB,WAAW,EAA5B,CACA,aAA2BD,OAAO,CAAC,iBAAMK,CAAAA,cAAc,CAACC,cAAD,CAApB,EAAD,CAAuC,CAACA,cAAD,CAAvC,CAAlC,CAAQO,KAAR,UAAQA,KAAR,CAAeN,OAAf,UAAeA,OAAf,CACA,iBAA2CT,WAAW,EAAtD,CAAQyB,eAAR,cAAQA,eAAR,CAAyBC,aAAzB,cAAyBA,aAAzB,CACAzB,SAAS,CAAC,UAAM,CACdc,KAAK,CAACY,OAAN,CAAc,SAACd,OAAD,CAAa,CACzB,GAAQe,CAAAA,KAAR,CAA8Bf,OAA9B,CAAQe,KAAR,CAAkBC,OAAlB,0BAA8BhB,OAA9B,YACA,GAAMiB,CAAAA,MAAyB,CAAG,QAA5BA,CAAAA,MAA4B,CAACC,GAAD,CAAMjB,GAAN,CAAc,CAC9C,MAAOR,CAAAA,cAAc,CAACQ,GAAD,CAArB,CACAU,QAAQ,CAACnB,SAAS,CAACS,GAAD,CAAV,CAAR,CACD,CAHD,CAIAW,eAAe,CAACG,KAAD,8CAAaZ,cAAb,EAAgCa,OAAhC,MAAyCC,MAAM,CAANA,MAAzC,GAAf,CACAxB,cAAc,CAACO,OAAO,CAACC,GAAT,CAAd,CAA8BD,OAA9B,CACD,CARD,EASAJ,OAAO,CAACkB,OAAR,CAAgB,cAAa,IAAVb,CAAAA,GAAU,MAAVA,GAAU,CAC3BY,aAAa,CAACZ,GAAD,CAAb,CACA,MAAOR,CAAAA,cAAc,CAACQ,GAAD,CAArB,CACD,CAHD,EAID,CAdQ,CAcN,CAACC,KAAD,CAAQN,OAAR,CAAiBe,QAAjB,CAA2BC,eAA3B,CAA4CC,aAA5C,CAdM,CAAT,CAeA,MAAO,KAAP,CACD"},"metadata":{},"sourceType":"module"}