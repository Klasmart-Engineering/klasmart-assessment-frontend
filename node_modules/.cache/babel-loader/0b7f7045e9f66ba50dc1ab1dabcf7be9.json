{"ast":null,"code":"import _asyncToGenerator from\"/Users/evik/kl/project-2024/klasmart-assessment-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/evik/kl/project-2024/klasmart-assessment-frontend/node_modules/@babel/runtime/regenerator/index.js\";import{createAsyncThunk,createSlice}from\"@reduxjs/toolkit\";export var ConfirmDialogType;(function(ConfirmDialogType){ConfirmDialogType[\"text\"]=\"text\";ConfirmDialogType[\"textField\"]=\"textField\";ConfirmDialogType[\"onlyInput\"]=\"onlyInput\";})(ConfirmDialogType||(ConfirmDialogType={}));var initialState={open:false,title:\"\",content:\"\",type:ConfirmDialogType.text,label:\"\",confirmText:\"\",cancelText:\"\",placeholder:\"\",rules:undefined};var resolve;var _createSlice=createSlice({name:\"confirm\",initialState:initialState,reducers:{show:function show(state,_ref){var payload=_ref.payload;Object.assign(state,payload,{open:true});},actExitConfirm:function actExitConfirm(state,_ref2){var payload=_ref2.payload;Object.assign(state,initialState);resolve(payload);}}}),actions=_createSlice.actions,reducer=_createSlice.reducer;export var actAsyncConfirm=createAsyncThunk(\"confirm/actAsyncConfirm\",/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(confirmRequest,_ref3){var dispatch;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch=_ref3.dispatch;dispatch(actions.show(confirmRequest));return _context.abrupt(\"return\",new Promise(function(r){resolve=r;}));case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref4.apply(this,arguments);};}());export var unwrapConfirm=function unwrapConfirm(result){if(!result.isConfirmed)return Promise.reject(result);return result;};var actExitConfirm=actions.actExitConfirm;export{actExitConfirm};export default reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","ConfirmDialogType","initialState","open","title","content","type","text","label","confirmText","cancelText","placeholder","rules","undefined","resolve","name","reducers","show","state","payload","Object","assign","actExitConfirm","actions","reducer","actAsyncConfirm","confirmRequest","dispatch","Promise","r","unwrapConfirm","result","isConfirmed","reject"],"sources":["/Users/evik/kl/project-2024/klasmart-assessment-frontend/src/reducers/confirm.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { ControllerProps } from \"react-hook-form\";\n\nexport interface ConfirmResult {\n  isConfirmed: boolean;\n  reasonValue?: string[];\n  otherValue?: string;\n  text?: string;\n}\n\nexport interface ConfirmRequest {\n  title?: string;\n  content?: string;\n  type?: ConfirmDialogType;\n  label?: string;\n  confirmText?: string;\n  hideConfirm?: boolean;\n  cancelText?: string;\n  hideCancel?: boolean;\n  placeholder?: string;\n  rules?: ControllerProps<\"input\">[\"rules\"];\n  defaultValue?: string;\n}\n\nexport interface IConfirmState extends ConfirmRequest {\n  open: boolean;\n}\n\nexport enum ConfirmDialogType {\n  text = \"text\",\n  textField = \"textField\",\n  onlyInput = \"onlyInput\",\n}\n\nconst initialState: IConfirmState = {\n  open: false,\n  title: \"\",\n  content: \"\",\n  type: ConfirmDialogType.text,\n  label: \"\",\n  confirmText: \"\",\n  cancelText: \"\",\n  placeholder: \"\",\n  rules: undefined,\n};\n\nlet resolve: (value: ConfirmResult | PromiseLike<ConfirmResult>) => void;\n\nconst { actions, reducer } = createSlice({\n  name: \"confirm\",\n  initialState,\n  reducers: {\n    show(state, { payload }: PayloadAction<ConfirmRequest>) {\n      Object.assign(state, payload, { open: true });\n    },\n    actExitConfirm(state, { payload }: PayloadAction<ConfirmResult>) {\n      Object.assign(state, initialState);\n      resolve(payload);\n    },\n  },\n});\n\nexport const actAsyncConfirm = createAsyncThunk<ConfirmResult, ConfirmRequest>(\n  \"confirm/actAsyncConfirm\",\n  async (confirmRequest, { dispatch }) => {\n    dispatch(actions.show(confirmRequest));\n    return new Promise<ConfirmResult>((r) => {\n      resolve = r;\n    });\n  }\n);\n\nexport const unwrapConfirm = (result: ConfirmResult) => {\n  if (!result.isConfirmed) return Promise.reject(result);\n  return result;\n};\n\nexport const { actExitConfirm } = actions;\nexport default reducer;\n"],"mappings":"+RAAA,OAASA,gBAAT,CAA2BC,WAA3B,KAA6D,kBAA7D,CA4BA,UAAYC,CAAAA,iBAAZ,C,UAAYA,iB,EAAAA,iB,gBAAAA,iB,0BAAAA,iB,6BAAAA,iB,GAAAA,iB,MAMZ,GAAMC,CAAAA,YAA2B,CAAG,CAClCC,IAAI,CAAE,KAD4B,CAElCC,KAAK,CAAE,EAF2B,CAGlCC,OAAO,CAAE,EAHyB,CAIlCC,IAAI,CAAEL,iBAAiB,CAACM,IAJU,CAKlCC,KAAK,CAAE,EAL2B,CAMlCC,WAAW,CAAE,EANqB,CAOlCC,UAAU,CAAE,EAPsB,CAQlCC,WAAW,CAAE,EARqB,CASlCC,KAAK,CAAEC,SAT2B,CAApC,CAYA,GAAIC,CAAAA,OAAJ,CAEA,iBAA6Bd,WAAW,CAAC,CACvCe,IAAI,CAAE,SADiC,CAEvCb,YAAY,CAAZA,YAFuC,CAGvCc,QAAQ,CAAE,CACRC,IADQ,eACHC,KADG,MACgD,IAA1CC,CAAAA,OAA0C,MAA1CA,OAA0C,CACtDC,MAAM,CAACC,MAAP,CAAcH,KAAd,CAAqBC,OAArB,CAA8B,CAAEhB,IAAI,CAAE,IAAR,CAA9B,EACD,CAHO,CAIRmB,cAJQ,yBAIOJ,KAJP,OAIyD,IAAzCC,CAAAA,OAAyC,OAAzCA,OAAyC,CAC/DC,MAAM,CAACC,MAAP,CAAcH,KAAd,CAAqBhB,YAArB,EACAY,OAAO,CAACK,OAAD,CAAP,CACD,CAPO,CAH6B,CAAD,CAAxC,CAAQI,OAAR,cAAQA,OAAR,CAAiBC,OAAjB,cAAiBA,OAAjB,CAcA,MAAO,IAAMC,CAAAA,eAAe,CAAG1B,gBAAgB,CAC7C,yBAD6C,2FAE7C,iBAAO2B,cAAP,qIAAyBC,QAAzB,OAAyBA,QAAzB,CACEA,QAAQ,CAACJ,OAAO,CAACN,IAAR,CAAaS,cAAb,CAAD,CAAR,CADF,gCAES,GAAIE,CAAAA,OAAJ,CAA2B,SAACC,CAAD,CAAO,CACvCf,OAAO,CAAGe,CAAV,CACD,CAFM,CAFT,wDAF6C,oEAAxC,CAUP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,MAAD,CAA2B,CACtD,GAAI,CAACA,MAAM,CAACC,WAAZ,CAAyB,MAAOJ,CAAAA,OAAO,CAACK,MAAR,CAAeF,MAAf,CAAP,CACzB,MAAOA,CAAAA,MAAP,CACD,CAHM,CAKA,GAAQT,CAAAA,cAAR,CAA2BC,OAA3B,CAAQD,cAAR,C,uBACP,cAAeE,CAAAA,OAAf"},"metadata":{},"sourceType":"module"}