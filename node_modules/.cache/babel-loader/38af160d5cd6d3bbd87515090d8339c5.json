{"ast":null,"code":"import _objectSpread from\"/Users/evik/kl/project-2024/klasmart-assessment-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{clamp}from\"lodash\";var defaultSettings={output:\"hex\",saturation:50,light:60};var hue2rgb=function hue2rgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*(2/3-t)*6;return p;};function hslToHex(h,s,l){l/=100;var a=s*Math.min(l,1-l)/100;var f=function f(n){var k=(n+h/30)%12;var color=l-a*Math.max(Math.min(k-3,9-k,1),-1);return Math.round(255*color).toString(16).padStart(2,\"0\");// convert to Hex and prefix \"0\" if needed\n};return\"#\".concat(f(0)).concat(f(8)).concat(f(4)).toUpperCase();}/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes h, s, and l are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   {number}  h       The hue\n * @param   {number}  s       The saturation\n * @param   {number}  l       The lightness\n * @return  {Array}           The RGB representation\n */function hslToRgb(h,s,l){var r,g,b;if(s===0)r=g=b=l;// achromatic\nelse{var q=l<0.5?l*(1+s):l+s-l*s;var p=2*l-q;r=hue2rgb(p,q,h+1/3);g=hue2rgb(p,q,h);b=hue2rgb(p,q,h-1/3);}return\"rgba(\".concat(Math.round(r*255),\", \").concat(Math.round(g*255),\", \").concat(Math.round(b*255),\", 1)\");}// eslint-disable-next-line import/no-anonymous-default-export\nexport default(function(str,settings){var colorSettings=_objectSpread(_objectSpread({},defaultSettings),settings);var saturation=colorSettings.saturation,light=colorSettings.light,output=colorSettings.output;var hash=0;for(var i=0;i<str.length;i++){hash=str.charCodeAt(i)+((hash<<5)-hash);}var h=Math.abs(hash)%360;var s=clamp(saturation,0,100);var l=clamp(light,0,100);switch(output){case\"hex\":return hslToHex(h,s,l);case\"hsl\":return\"hsl(\".concat(h,\", \").concat(s,\"%, \").concat(l,\"%)\");case\"rgb\":return hslToRgb(h/360,s/100,l/100);}});","map":{"version":3,"names":["clamp","defaultSettings","output","saturation","light","hue2rgb","p","q","t","hslToHex","h","s","l","a","Math","min","f","n","k","color","max","round","toString","padStart","toUpperCase","hslToRgb","r","g","b","str","settings","colorSettings","hash","i","length","charCodeAt","abs"],"sources":["/Users/evik/kl/project-2024/klasmart-assessment-frontend/src/components/Dashboard/Widgets/Student/TeacherFeedback/component/stringToColor.ts"],"sourcesContent":["import { clamp } from \"lodash\";\n\ntype ColorOutput = `rgb` | `hsl` | `hex`;\n\nexport interface ColorSettings {\n  output?: ColorOutput;\n  saturation?: number;\n  light?: number;\n}\n\ninterface DefaultSettings {\n  output: ColorOutput;\n  saturation: number;\n  light: number;\n}\n\nconst defaultSettings: DefaultSettings = {\n  output: `hex`,\n  saturation: 50,\n  light: 60,\n};\n\nconst hue2rgb = function hue2rgb(p: number, q: number, t: number) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n};\n\nfunction hslToHex(h: number, s: number, l: number) {\n  l /= 100;\n  const a = (s * Math.min(l, 1 - l)) / 100;\n  const f = (n: number) => {\n    const k = (n + h / 30) % 12;\n    const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return Math.round(255 * color)\n      .toString(16)\n      .padStart(2, `0`); // convert to Hex and prefix \"0\" if needed\n  };\n  return `#${f(0)}${f(8)}${f(4)}`.toUpperCase();\n}\n\n/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes h, s, and l are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   {number}  h       The hue\n * @param   {number}  s       The saturation\n * @param   {number}  l       The lightness\n * @return  {Array}           The RGB representation\n */\nfunction hslToRgb(h: number, s: number, l: number) {\n  let r, g, b;\n  if (s === 0) r = g = b = l;\n  // achromatic\n  else {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  return `rgba(${Math.round(r * 255)}, ${Math.round(g * 255)}, ${Math.round(b * 255)}, 1)`;\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (str: string, settings?: ColorSettings): string => {\n  const colorSettings = {\n    ...defaultSettings,\n    ...settings,\n  };\n  const { saturation, light, output } = colorSettings;\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  const h = Math.abs(hash) % 360;\n  const s = clamp(saturation, 0, 100);\n  const l = clamp(light, 0, 100);\n  switch (output) {\n    case `hex`:\n      return hslToHex(h, s, l);\n    case `hsl`:\n      return `hsl(${h}, ${s}%, ${l}%)`;\n    case `rgb`:\n      return hslToRgb(h / 360, s / 100, l / 100);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}