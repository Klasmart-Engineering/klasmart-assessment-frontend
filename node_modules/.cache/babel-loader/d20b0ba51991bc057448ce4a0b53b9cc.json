{"ast":null,"code":"import{Button}from\"@material-ui/core\";import*as iconv from\"iconv-lite\";import{csvToArray,isUTF8}from\"./handledata\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function UploadCSV(props){var _props$variant=props.variant,variant=_props$variant===void 0?\"contained\":_props$variant,label=props.label,onUploadSuccess=props.onUploadSuccess,onUploadFail=props.onUploadFail;var handleChange=function handleChange(e){var files=e.target.files;var rawFile=files&&files[0];// only use files[0];\nif(rawFile){if(!rawFile.type.includes(\"csv\")){onUploadFail();e.target.files=null;e.target.value=\"\";}else{return new Promise(function(resolve){var reader=new FileReader();reader.readAsArrayBuffer(rawFile);reader.onload=function(e){var _e$target,_e$target2;var originData=(_e$target=e.target)===null||_e$target===void 0?void 0:_e$target.result;var data=Buffer.from((_e$target2=e.target)===null||_e$target2===void 0?void 0:_e$target2.result);var utf8Data=new Uint8Array(data);var isUtf8=isUTF8(utf8Data);if(isUtf8){originData=iconv.decode(data,\"utf-8\");}else{originData=iconv.decode(data,\"gbk\");}var array=csvToArray(originData);var headers=array[0].filter(function(i){return!!i;});var contentsArray=[];array.filter(function(item){return!!Object.values(item).join(\"\");}).forEach(function(item){var obj={};var columns=item;var mediaColums=columns.map(function(cItem){return cItem.replace(/\\\\“/,\"\").replace(/\\t/,\"\").replace(/\"/g,\"\");});var finalColumns=mediaColums.map(function(item){if(item.indexOf(\";\")>0){return item.split(\";\");}else if(item.indexOf(\"；\")>0){return item.split(\"；\");}else{return item;}});headers.forEach(function(item,index){if(item){obj[item]=finalColumns[index];}});contentsArray.push(obj);});resolve({headers:headers,contentsArray:contentsArray});onUploadSuccess(headers,contentsArray);};e.target.files=null;e.target.value=\"\";});}}};return/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{style:{display:\"none\"},accept:\".csv\",type:\"file\",onChange:handleChange}),/*#__PURE__*/_jsx(Button,{variant:variant,color:\"primary\",component:\"span\",children:label})]});}","map":{"version":3,"names":["Button","iconv","csvToArray","isUTF8","UploadCSV","props","variant","label","onUploadSuccess","onUploadFail","handleChange","e","files","target","rawFile","type","includes","value","Promise","resolve","reader","FileReader","readAsArrayBuffer","onload","originData","result","data","Buffer","from","utf8Data","Uint8Array","isUtf8","decode","array","headers","filter","i","contentsArray","item","Object","values","join","forEach","obj","columns","mediaColums","map","cItem","replace","finalColumns","indexOf","split","index","push","display"],"sources":["/Users/evik/kl/project-2024/klasmart-assessment-frontend/src/components/UploadCSV/index.tsx"],"sourcesContent":["import { Button } from \"@material-ui/core\";\nimport * as iconv from \"iconv-lite\";\nimport { ChangeEvent } from \"react\";\nimport { csvToArray, isUTF8 } from \"./handledata\";\n\nexport interface CSVObjProps {\n  [key: string]: any\n}\n\nexport interface UploadCSVProps {\n  label: string;\n  variant?: \"text\" | \"outlined\" | \"contained\" | undefined;\n  onUploadSuccess: (headers: string[], array: CSVObjProps[]) => void;\n  onUploadFail: () => void;\n}\nexport function UploadCSV(props: UploadCSVProps) {\n  const { variant = \"contained\", label, onUploadSuccess, onUploadFail } = props;\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    const rawFile = files && files[0] // only use files[0];\n    if(rawFile) {\n      if(!rawFile.type.includes(\"csv\")) {\n        onUploadFail();\n        e.target.files = null;\n        e.target.value = \"\";\n      } else {\n        return new Promise((resolve) => {\n          const reader = new FileReader();\n          reader.readAsArrayBuffer(rawFile);\n          reader.onload = e => {\n            let originData = e.target?.result as string;\n            const data = Buffer.from(e.target?.result as string);\n            const utf8Data = new Uint8Array(data);\n            const isUtf8 = isUTF8(utf8Data)\n            if(isUtf8) {\n              originData = iconv.decode(data, \"utf-8\")\n            } else {\n              originData = iconv.decode(data, \"gbk\")\n            }\n            const array = csvToArray(originData);\n            const headers = array[0].filter(i => !!i);\n            const contentsArray: CSVObjProps[] = [];\n            array.filter(item => !!(Object.values(item).join(\"\")))\n            .forEach(item => {\n              const obj: CSVObjProps = {}\n              const columns = item;\n              const mediaColums = columns.map(cItem => cItem.replace(/\\\\“/, \"\").replace(/\\t/, \"\").replace(/\"/g, \"\"))\n              const finalColumns = mediaColums.map(item => {\n                if(item.indexOf(\";\") > 0) {\n                  return item.split(\";\")\n                } else if(item.indexOf(\"；\") > 0) {\n                  return item.split(\"；\")\n                } else {\n                  return item;\n                }\n              });\n              headers.forEach((item, index) => {\n                if(item) {\n                  obj[item] = finalColumns[index];\n                }\n              })\n              contentsArray.push(obj)\n            })\n            resolve({headers, contentsArray});\n            onUploadSuccess(headers, contentsArray);\n          }\n          e.target.files = null;\n          e.target.value = \"\";\n        })\n      }\n    }\n  }\n  return (\n    <label>\n      <input style={{ display: \"none\" }} accept=\".csv\" type=\"file\" onChange={handleChange} />\n      <Button variant={variant} color=\"primary\" component=\"span\">\n        {label}\n      </Button>\n    </label>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}