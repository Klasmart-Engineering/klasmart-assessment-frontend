{
  "swagger": "2.0",
  "info": {
    "description": "\"KidsLoop 2.0 backend rest api",
    "title": "KidsLoop 2.0 REST API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {},
    "license": {},
    "version": "1.0.0"
  },
  "host": "https://kl2-test.kidsloop.net/v1",
  "paths": {
    "/ages": {
      "get": {
        "description": "get age",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["age"],
        "summary": "getAge",
        "operationId": "getAge",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "program_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.Age"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "add age",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["age"],
        "summary": "addAge",
        "operationId": "addAge",
        "parameters": [
          {
            "description": "age",
            "name": "age",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.Age"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/ages/{id}": {
      "get": {
        "description": "get age by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["age"],
        "summary": "getAgeByID",
        "operationId": "getAgeByID",
        "parameters": [
          {
            "type": "string",
            "description": "age id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Age"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updateAge",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["age"],
        "summary": "updateAge",
        "operationId": "updateAge",
        "parameters": [
          {
            "type": "string",
            "description": "age id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "age",
            "name": "age",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.Age"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deleteAge",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["age"],
        "summary": "deleteAge",
        "operationId": "deleteAge",
        "parameters": [
          {
            "type": "string",
            "description": "age id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/assessments": {
      "get": {
        "description": "list assessments",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["assessments"],
        "summary": "list assessments",
        "operationId": "listAssessment",
        "parameters": [
          {
            "type": "string",
            "description": "status search",
            "name": "status",
            "in": "query"
          },
          {
            "type": "string",
            "description": "teacher name fuzzy search",
            "name": "teacher_name",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 1,
            "description": "page number",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int",
            "default": 10,
            "description": "page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": ["class_end_time", "-class_end_time", "complete_time", "-complete_time"],
            "type": "string",
            "default": "-class_end_time",
            "description": "list order by",
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ListAssessmentsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "add assessments",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["assessments"],
        "summary": "add assessments",
        "operationId": "addAssessment",
        "parameters": [
          {
            "description": "add assessment command",
            "name": "assessment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.AddAssessmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.AddAssessmentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/assessments/{id}": {
      "get": {
        "description": "get assessment detail",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["assessments"],
        "summary": "get assessment detail",
        "operationId": "getAssessment",
        "parameters": [
          {
            "type": "string",
            "description": "assessment id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.AssessmentDetailView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "update assessment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["assessments"],
        "summary": "update assessment",
        "operationId": "updateAssessment",
        "parameters": [
          {
            "type": "string",
            "description": "assessment id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "update assessment assessment command",
            "name": "update_assessment_command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.UpdateAssessmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/assessments_for_test": {
      "post": {
        "description": "add assessments for test",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["assessments"],
        "summary": "add assessments for test",
        "operationId": "addAssessmentForTest",
        "parameters": [
          {
            "description": "add assessment command",
            "name": "assessment",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.AddAssessmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.AddAssessmentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/bulk/learning_outcomes": {
      "delete": {
        "description": "bulk delete learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "bulk delete learning outcome",
        "operationId": "deleteOutcomeBulk",
        "parameters": [
          {
            "description": "outcome id list",
            "name": "id_list",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.OutcomeIDList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/bulk_approve/learning_outcomes": {
      "put": {
        "description": "approve learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "bulk approve learning outcome",
        "operationId": "approveLearningOutcomesBulk",
        "parameters": [
          {
            "description": "outcome id list",
            "name": "id_list",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.OutcomeIDList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/bulk_publish/learning_outcomes": {
      "put": {
        "description": "submit publish learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "publish bulk learning outcome",
        "operationId": "publishLearningOutcomesBulk",
        "parameters": [
          {
            "description": "outcome id list",
            "name": "id_list",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.OutcomeIDList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/bulk_reject/learning_outcomes": {
      "put": {
        "description": "reject learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "bulk reject learning outcome",
        "operationId": "rejectLearningOutcomesBulk",
        "parameters": [
          {
            "description": "outcome id list",
            "name": "bulk_reject_list",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.OutcomeBulkRejectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/class_types": {
      "get": {
        "description": "get class type",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["classType"],
        "summary": "getClassType",
        "operationId": "getClassType",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.ClassType"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/class_types/{id}": {
      "get": {
        "description": "get classType by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["classType"],
        "summary": "getClassTypeByID",
        "operationId": "getClassTypeByID",
        "parameters": [
          {
            "type": "string",
            "description": "classType id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ClassType"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents": {
      "get": {
        "description": "query content by condition (Inherent \u0026 unchangeable)",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "queryContent",
        "operationId": "searchContents",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content author",
            "name": "author",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content type",
            "name": "content_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content scope",
            "name": "scope",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search program group",
            "name": "program_group",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content program",
            "name": "program",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content path",
            "name": "path",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content source type",
            "name": "source_type",
            "in": "query"
          },
          {
            "enum": ["published", "draft", "pending", "rejected", "archive"],
            "type": "string",
            "description": "search content publish status",
            "name": "publish_status",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "content_name", "-content_name", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ContentInfoWithDetailsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "create lesson plan, lesson material or assets",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "createContent",
        "operationId": "createContent",
        "parameters": [
          {
            "description": "create request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.CreateContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/copy": {
      "post": {
        "description": "copy lesson plan, lesson material",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "copyContent",
        "operationId": "copyContent",
        "parameters": [
          {
            "description": "create request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.CreateContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}": {
      "get": {
        "description": "get a content by id (Inherent \u0026 unchangeable)",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "getContent",
        "operationId": "getContentById",
        "parameters": [
          {
            "type": "string",
            "description": "get content id",
            "name": "content_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ContentInfoWithDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "update a content data",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "updateContent",
        "operationId": "updateContent",
        "parameters": [
          {
            "type": "string",
            "description": "content id to publish",
            "name": "content_id",
            "in": "path",
            "required": true
          },
          {
            "description": "content data to update",
            "name": "contentData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.CreateContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "delete a content",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "deleteContent",
        "operationId": "deleteContent",
        "parameters": [
          {
            "type": "string",
            "description": "content id to delete",
            "name": "content_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}/live/token": {
      "get": {
        "description": "get content live token",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "getContentLiveToken",
        "operationId": "getContentLiveToken",
        "parameters": [
          {
            "type": "string",
            "description": "content id",
            "name": "content_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.LiveTokenView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}/lock": {
      "put": {
        "description": "lock a content to edit",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "lockContent",
        "operationId": "lockContent",
        "parameters": [
          {
            "type": "string",
            "description": "content id to lock",
            "name": "content_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}/publish": {
      "put": {
        "description": "publish a content",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "publishContent",
        "operationId": "publishContent",
        "parameters": [
          {
            "type": "string",
            "description": "content id to publish",
            "name": "content_id",
            "in": "path",
            "required": true
          },
          {
            "description": "content publish data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.PublishContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}/publish/assets": {
      "put": {
        "description": "publish a content with assets",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "publishContentWithAssets",
        "operationId": "publishContentWithAssets",
        "parameters": [
          {
            "type": "string",
            "description": "content id to publish",
            "name": "content_id",
            "in": "path",
            "required": true
          },
          {
            "description": "content publish data",
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.PublishContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}/review/approve": {
      "put": {
        "description": "approve content by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "approve content",
        "operationId": "approveContentReview",
        "parameters": [
          {
            "type": "string",
            "description": "content id",
            "name": "content_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}/review/reject": {
      "put": {
        "description": "reject content by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "reject content",
        "operationId": "rejectContentReview",
        "parameters": [
          {
            "type": "string",
            "description": "content id",
            "name": "content_id",
            "in": "path",
            "required": true
          },
          {
            "description": "reject_reason",
            "name": "RejectReasonRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.RejectReasonRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents/{content_id}/statistics": {
      "get": {
        "description": "get content data count",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "contentDataCount",
        "operationId": "getContentsStatistics",
        "parameters": [
          {
            "type": "string",
            "description": "content id to get count",
            "name": "content_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ContentStatisticsInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_auth": {
      "post": {
        "description": "add authed content to org",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "addAuthedContent",
        "operationId": "addAuthedContent",
        "parameters": [
          {
            "description": "add authed content request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.AddAuthedContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "delete authed content to org",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "deleteAuthedContent",
        "operationId": "deleteAuthedContent",
        "parameters": [
          {
            "description": "batch delete authed content request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.DeleteAuthedContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_auth/batch": {
      "post": {
        "description": "batch add authed content to org",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "batchAddAuthedContent",
        "operationId": "batchAddAuthedContent",
        "parameters": [
          {
            "description": "batch add authed content request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.BatchAddAuthedContentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "batch delete authed content to org",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "batchDeleteAuthedContent",
        "operationId": "batchDeleteAuthedContent",
        "parameters": [
          {
            "description": "batch delete authed content request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.BatchDeleteAuthedContentByOrgsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_auth/content": {
      "get": {
        "description": "get content authed org list",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "getContentAuthedOrg",
        "operationId": "getContentAuthedOrg",
        "parameters": [
          {
            "type": "string",
            "description": "content id",
            "name": "content_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.AuthedOrgList"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_auth/org": {
      "get": {
        "description": "get org authed content list",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "getOrgAuthedContent",
        "operationId": "getOrgAuthedContent",
        "parameters": [
          {
            "type": "string",
            "description": "org id",
            "name": "org_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.AuthedContentRecordInfoResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_authed": {
      "get": {
        "description": "query authed content by condition",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "queryAuthContent",
        "operationId": "queryAuthContent",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content type",
            "name": "content_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content program",
            "name": "program",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search program group",
            "name": "program_group",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content source type",
            "name": "source_type",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "content_name", "-content_name", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ContentInfoWithDetailsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_bulk": {
      "delete": {
        "description": "delete contents bulk",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "deleteContentBulk",
        "operationId": "deleteContentBulk",
        "parameters": [
          {
            "description": "content bulk id list",
            "name": "contentIds",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.contentBulkOperateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_bulk/publish": {
      "put": {
        "description": "publish contents bulk",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "publishContentBulk",
        "operationId": "publishContentBulk",
        "parameters": [
          {
            "description": "content bulk id list",
            "name": "contentIds",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.contentBulkOperateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_folders": {
      "get": {
        "description": "query content by condition",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "queryFolderContent",
        "operationId": "queryFolderContent",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content author",
            "name": "author",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content type",
            "name": "content_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content scope",
            "name": "scope",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content program",
            "name": "program",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search program group",
            "name": "program_group",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content path",
            "name": "path",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content source type",
            "name": "source_type",
            "in": "query"
          },
          {
            "enum": ["published", "draft", "pending", "rejected", "archive"],
            "type": "string",
            "description": "search content publish status",
            "name": "publish_status",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "content_name", "-content_name", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.FolderContentInfoWithDetailsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_pending": {
      "get": {
        "description": "query pending content by condition",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "queryPendingContent",
        "operationId": "searchPendingContents",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content author",
            "name": "author",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content type",
            "name": "content_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content scope",
            "name": "scope",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content program",
            "name": "program",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search program group",
            "name": "program_group",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content source type",
            "name": "source_type",
            "in": "query"
          },
          {
            "enum": ["published", "draft", "pending", "rejected", "archive"],
            "type": "string",
            "description": "search content publish status",
            "name": "publish_status",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "content_name", "-content_name", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ContentInfoWithDetailsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_private": {
      "get": {
        "description": "query private content by condition",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "queryPrivateContent",
        "operationId": "searchPrivateContents",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content author",
            "name": "author",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content type",
            "name": "content_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content program",
            "name": "program",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search program group",
            "name": "program_group",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content source type",
            "name": "source_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search content scope",
            "name": "scope",
            "in": "query"
          },
          {
            "enum": ["published", "draft", "pending", "rejected", "archive"],
            "type": "string",
            "description": "search content publish status",
            "name": "publish_status",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "content_name", "-content_name", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ContentInfoWithDetailsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_resources": {
      "get": {
        "description": "get path to upload resource",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "getContentResourceUploadPath",
        "operationId": "getContentResourceUploadPath",
        "parameters": [
          {
            "type": "string",
            "description": "Resource partition",
            "name": "partition",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Resource extension",
            "name": "extension",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_resources/{resource_id}": {
      "get": {
        "description": "get the path of a resource",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "getContentResourcePath",
        "operationId": "getContentResourcePath",
        "parameters": [
          {
            "type": "string",
            "description": "Resource id",
            "name": "resource_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_review/approve": {
      "put": {
        "description": "approve content bulk",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "approve content bulk",
        "operationId": "approveContentReviewBulk",
        "parameters": [
          {
            "description": "reject_reason",
            "name": "RejectReasonRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.RejectReasonBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/contents_review/reject": {
      "put": {
        "description": "reject content bulk",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["content"],
        "summary": "reject content bulk",
        "operationId": "rejectContentReviewBulk",
        "parameters": [
          {
            "description": "reject_reason",
            "name": "RejectReasonRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.RejectReasonBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/crypto/h5p/jwt": {
      "get": {
        "description": "generate JWT for h5p",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["crypto"],
        "summary": "generateH5pJWT",
        "operationId": "generateH5pJWT",
        "parameters": [
          {
            "type": "string",
            "description": "subject for jwt",
            "name": "sub",
            "in": "query"
          },
          {
            "type": "string",
            "description": "content id to operate",
            "name": "content_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.TokenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/crypto/h5p/signature": {
      "get": {
        "description": "signature url for h5p",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["crypto"],
        "summary": "h5pSignature",
        "operationId": "h5pSignature",
        "parameters": [
          {
            "type": "string",
            "description": "url to signature",
            "name": "url",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.SignatureResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/developmentals": {
      "get": {
        "description": "get developmental",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["developmental"],
        "summary": "getDevelopmental",
        "operationId": "getDevelopmental",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "program_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.Developmental"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "addDevelopmental",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["developmental"],
        "summary": "addDevelopmental",
        "operationId": "addDevelopmental",
        "parameters": [
          {
            "description": "developmental",
            "name": "developmental",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.Developmental"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/developmentals/{id}": {
      "get": {
        "description": "get developmental by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["developmental"],
        "summary": "getDevelopmentalByID",
        "operationId": "getDevelopmentalByID",
        "parameters": [
          {
            "type": "string",
            "description": "developmental id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Developmental"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updateDevelopmental",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["developmental"],
        "summary": "updateDevelopmental",
        "operationId": "updateDevelopmental",
        "parameters": [
          {
            "type": "string",
            "description": "developmental id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "developmental",
            "name": "developmental",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.Developmental"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deleteDevelopmental",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["developmental"],
        "summary": "deleteDevelopmental",
        "operationId": "deleteDevelopmental",
        "parameters": [
          {
            "type": "string",
            "description": "developmental id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders": {
      "post": {
        "description": "create folder",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "createFolder",
        "operationId": "createFolder",
        "parameters": [
          {
            "description": "create request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.CreateFolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.CreateFolderResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items": {
      "post": {
        "description": "create folder item",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "addFolderItem",
        "operationId": "addFolderItem",
        "parameters": [
          {
            "description": "create request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.CreateFolderItemRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.CreateFolderResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "remove folder items bulk",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "removeFolderItemBulk",
        "operationId": "removeFolderItemBulk",
        "parameters": [
          {
            "description": "remove folder ids",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.RemoveItemBulk"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items/bulk/move": {
      "put": {
        "description": "bulk move folder item",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "moveFolderItemBulk",
        "operationId": "moveFolderItemBulk",
        "parameters": [
          {
            "description": "move folder item buck request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.MoveFolderIDBulkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items/details/{item_id}": {
      "get": {
        "description": "get a folder item by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "getFolderItemByID",
        "operationId": "getFolderItemByID",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.FolderItemInfo"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "update folder item info",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "updateFolderItem",
        "operationId": "updateFolderItem",
        "parameters": [
          {
            "type": "string",
            "description": "folder item id to delete",
            "name": "item_id",
            "in": "path",
            "required": true
          },
          {
            "description": "update request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.UpdateFolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items/list/{item_id}": {
      "get": {
        "description": "list folder items (deprecated)",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "listFolderItems",
        "operationId": "listFolderItems",
        "parameters": [
          {
            "type": "integer",
            "description": "list items type. 1.folder 2.file",
            "name": "item_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.FolderItemsResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items/move": {
      "put": {
        "description": "move folder item",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "moveFolderItem",
        "operationId": "moveFolderItem",
        "parameters": [
          {
            "description": "move folder request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.MoveFolderRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "406": {
            "description": "Not Acceptable",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items/search/org": {
      "get": {
        "description": "search folder items in org",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "searchOrgFolderItems",
        "operationId": "searchOrgFolderItems",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "list items type. 1.folder 2.file",
            "name": "item_type",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "list items owner type. 1.org folder 2.private folder",
            "name": "owner_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "list items type. [assets, plans and materials]",
            "name": "partition",
            "in": "query"
          },
          {
            "type": "string",
            "description": "list items from parent",
            "name": "parent_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "list items in path",
            "name": "path",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.FolderItemsResponseWithTotal"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items/search/private": {
      "get": {
        "description": "search user's private folder items",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "searchPrivateFolderItems",
        "operationId": "searchPrivateFolderItems",
        "parameters": [
          {
            "type": "string",
            "description": "search content name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "list items type. 1.folder 2.file",
            "name": "item_type",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "list items owner type. 1.org folder 2.private folder",
            "name": "owner_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "list items type. [assets, plans and materials]",
            "name": "partition",
            "in": "query"
          },
          {
            "type": "string",
            "description": "list items from parent",
            "name": "parent_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "list items in path",
            "name": "path",
            "in": "query"
          },
          {
            "enum": ["id", "-id", "create_at", "-create_at", "update_at", "-update_at"],
            "type": "string",
            "description": "search content order by column name",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page index",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "content list page size",
            "name": "page_size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.FolderItemsResponseWithTotal"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/items/{item_id}": {
      "delete": {
        "description": "remove folder item",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "removeFolderItem",
        "operationId": "removeFolderItem",
        "parameters": [
          {
            "type": "string",
            "description": "folder item id to delete",
            "name": "item_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/folders/share": {
      "get": {
        "description": "get folders shared records",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "getFoldersSharedRecords",
        "operationId": "getFoldersSharedRecords",
        "parameters": [
          {
            "type": "string",
            "description": "folder id list, split by ','",
            "name": "folder_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.FolderShareRecords"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "share folders to org",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["folder"],
        "summary": "shareFolders",
        "operationId": "shareFolders",
        "parameters": [
          {
            "description": "create request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ShareFoldersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/grades": {
      "get": {
        "description": "get grade",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["grade"],
        "summary": "getGrade",
        "operationId": "getGrade",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "program_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.Grade"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "addGrade",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["grade"],
        "summary": "addGrade",
        "operationId": "addGrade",
        "parameters": [
          {
            "description": "Grade",
            "name": "grade",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.Grade"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/grades/{id}": {
      "get": {
        "description": "get grade by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["grade"],
        "summary": "getGradeByID",
        "operationId": "getGradeByID",
        "parameters": [
          {
            "type": "string",
            "description": "grade id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Grade"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updateGrade",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["grade"],
        "summary": "updateGrade",
        "operationId": "updateGrade",
        "parameters": [
          {
            "type": "string",
            "description": "grade id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "grade",
            "name": "grade",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.Grade"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deleteGrade",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["grade"],
        "summary": "deleteGrade",
        "operationId": "deleteGrade",
        "parameters": [
          {
            "type": "string",
            "description": "grade id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/h5p/events": {
      "post": {
        "description": "create h5p event",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["h5p"],
        "summary": "createH5PEvent",
        "operationId": "createH5PEvent",
        "parameters": [
          {
            "description": "create request",
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.CreateH5pEventRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.CreateContentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/learning_outcomes": {
      "get": {
        "description": "search learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "search learning outcome",
        "operationId": "searchLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "search by name",
            "name": "outcome_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by description",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by keywords",
            "name": "keywords",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by shortcode",
            "name": "shortcode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by author_name",
            "name": "author_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by search_key",
            "name": "search_key",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "search by assumed: 1 true, 0 false, -1 all",
            "name": "assumed",
            "in": "query"
          },
          {
            "enum": ["draft", "pending", "published", "rejected"],
            "type": "string",
            "description": "search by publish_status",
            "name": "publish_status",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": ["name", "-name", "created_at", "-created_at", "updated_at", "-updated_at"],
            "type": "string",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.OutcomeSearchResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Create learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "createOutcome",
        "operationId": "createLearningOutcomes",
        "parameters": [
          {
            "description": "create outcome",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.OutcomeCreateView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.OutcomeCreateResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/learning_outcomes/{outcome_id}": {
      "get": {
        "description": "learning outcomes info",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "getLearningOutcome",
        "operationId": "getLearningOutcomesById",
        "parameters": [
          {
            "type": "string",
            "description": "outcome id",
            "name": "outcome_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.OutcomeView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "update learning outcomes by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "update learning outcome",
        "operationId": "updateLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "outcome id",
            "name": "outcome_id",
            "in": "path",
            "required": true
          },
          {
            "description": "learning outcome",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.OutcomeCreateView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "delete learning outcomes by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "delete learning outcome",
        "operationId": "deleteLearningOutcome",
        "parameters": [
          {
            "type": "string",
            "description": "outcome id",
            "name": "outcome_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/learning_outcomes/{outcome_id}/approve": {
      "put": {
        "description": "approve learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "approve learning outcome",
        "operationId": "approveLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "outcome id",
            "name": "outcome_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/learning_outcomes/{outcome_id}/lock": {
      "put": {
        "description": "edit published learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "lock learning outcome",
        "operationId": "lockLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "outcome id",
            "name": "outcome_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/learning_outcomes/{outcome_id}/publish": {
      "put": {
        "description": "submit publish learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "publish learning outcome",
        "operationId": "publishLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "outcome id",
            "name": "outcome_id",
            "in": "path",
            "required": true
          },
          {
            "description": "publish scope",
            "name": "PublishOutcomeRequest",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/api.PublishOutcomeReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/learning_outcomes/{outcome_id}/reject": {
      "put": {
        "description": "reject learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "reject learning outcome",
        "operationId": "rejectLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "outcome id",
            "name": "outcome_id",
            "in": "path",
            "required": true
          },
          {
            "description": "reject reason",
            "name": "OutcomeRejectReq",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.OutcomeRejectReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/lesson_types": {
      "get": {
        "description": "get lessonType",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["lessonType"],
        "summary": "getLessonType",
        "operationId": "getLessonType",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.LessonType"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/lesson_types/{id}": {
      "get": {
        "description": "get lessonType by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["lessonType"],
        "summary": "getLessonTypeByID",
        "operationId": "getLessonTypeByID",
        "parameters": [
          {
            "type": "string",
            "description": "lessonType id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.LessonType"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/organizations_propertys/{id}": {
      "get": {
        "description": "get organization property by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["organizationProperty"],
        "summary": "getOrganizationPropertyByID",
        "operationId": "getOrganizationPropertyByID",
        "parameters": [
          {
            "type": "string",
            "description": "organization id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.OrganizationProperty"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/pending_learning_outcomes": {
      "get": {
        "description": "search pending learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "search pending learning outcome",
        "operationId": "searchPendingLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "search by name",
            "name": "outcome_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by description",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by keywords",
            "name": "keywords",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by shortcode",
            "name": "shortcode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by author_name",
            "name": "author_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by search_key",
            "name": "search_key",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "search by assumed: 1 true, 0 false, -1 all",
            "name": "assumed",
            "in": "query"
          },
          {
            "enum": ["draft", "pending", "published", "rejected"],
            "type": "string",
            "description": "search by publish_status",
            "name": "publish_status",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": ["name", "-name", "created_at", "-created_at", "updated_at", "-updated_at"],
            "type": "string",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.OutcomeSearchResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "description": "Ping and test service",
        "consumes": ["application/json"],
        "produces": ["text/plain"],
        "tags": ["common"],
        "summary": "Ping",
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/private_learning_outcomes": {
      "get": {
        "description": "search private learning outcomes",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["learning_outcomes"],
        "summary": "search private learning outcome",
        "operationId": "searchPrivateLearningOutcomes",
        "parameters": [
          {
            "type": "string",
            "description": "search by name",
            "name": "outcome_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by description",
            "name": "description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by keywords",
            "name": "keywords",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by shortcode",
            "name": "shortcode",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by author_name",
            "name": "author_name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by search_key",
            "name": "search_key",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "search by assumed: 1 true, 0 false, -1 all",
            "name": "assumed",
            "in": "query"
          },
          {
            "enum": ["draft", "pending", "published", "rejected"],
            "type": "string",
            "description": "search by publish_status",
            "name": "publish_status",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page size",
            "name": "page_size",
            "in": "query"
          },
          {
            "enum": ["name", "-name", "created_at", "-created_at", "updated_at", "-updated_at"],
            "type": "string",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.OutcomeSearchResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/programs": {
      "get": {
        "description": "get program",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["program"],
        "summary": "getProgram",
        "operationId": "getProgram",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.Program"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "addProgram",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["program"],
        "summary": "addProgram",
        "operationId": "addProgram",
        "parameters": [
          {
            "description": "program",
            "name": "program",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.Program"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/programs/{id}": {
      "get": {
        "description": "get program by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["program"],
        "summary": "getProgramByID",
        "operationId": "getProgramByID",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Program"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updateProgram",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["program"],
        "summary": "updateProgram",
        "operationId": "updateProgram",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "program",
            "name": "program",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.Program"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deleteProgram",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["program"],
        "summary": "deleteProgram",
        "operationId": "deleteProgram",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/programs/{id}/ages": {
      "put": {
        "description": "SetAge",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["program"],
        "summary": "SetAge",
        "operationId": "SetAge",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "age_ids",
            "name": "age_ids",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/programs/{id}/developments": {
      "put": {
        "description": "SetDevelopmental",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["program"],
        "summary": "SetDevelopmental",
        "operationId": "SetDevelopmental",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "development_ids",
            "name": "development_ids",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/programs/{id}/grades": {
      "put": {
        "description": "SetGrade",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["program"],
        "summary": "SetGrade",
        "operationId": "SetGrade",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "grade_ids",
            "name": "grade_ids",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/programs/{id}/skills": {
      "put": {
        "description": "SetSkill",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["program"],
        "summary": "SetSkill",
        "operationId": "SetSkill",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "development_id",
            "name": "development_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "skill_ids",
            "name": "skill_ids",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/programs/{id}/subjects": {
      "put": {
        "description": "SetSubject",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["program"],
        "summary": "SetSubject",
        "operationId": "SetSubject",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "subject_ids",
            "name": "subject_ids",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/performance/h5p/students": {
      "get": {
        "description": "list student performance h5p report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "list student performance h5p report",
        "operationId": "listStudentsPerformanceH5PReport",
        "parameters": [
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "class_id",
            "name": "class_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "lesson plan id",
            "name": "lesson_plan_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ListStudentsPerformanceH5PReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/performance/h5p/students/{id}": {
      "get": {
        "description": "get student performance h5p report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "get student performance h5p report",
        "operationId": "getStudentPerformanceH5PReport",
        "parameters": [
          {
            "type": "string",
            "description": "student id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "class_id",
            "name": "class_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "lesson plan id",
            "name": "lesson_plan_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.GetStudentPerformanceH5PReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/performance/students": {
      "get": {
        "description": "list student performance report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "list student performance report",
        "operationId": "listStudentsPerformanceReport",
        "parameters": [
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "class_id",
            "name": "class_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "lesson plan id",
            "name": "lesson_plan_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ListStudentsPerformanceReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/performance/students/{id}": {
      "get": {
        "description": "get student performance report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "get student performance report",
        "operationId": "getStudentPerformanceReport",
        "parameters": [
          {
            "type": "string",
            "description": "student id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "class_id",
            "name": "class_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "lesson plan id",
            "name": "lesson_plan_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.GetStudentPerformanceReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/students": {
      "get": {
        "description": "list student report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "list student report",
        "operationId": "listStudentsAchievementReport",
        "parameters": [
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "class_id",
            "name": "class_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "lesson plan id",
            "name": "lesson_plan_id",
            "in": "query",
            "required": true
          },
          {
            "enum": ["all", "achieved", "not_achieved", "not_attempted"],
            "type": "string",
            "default": "all",
            "description": "status",
            "name": "status",
            "in": "query"
          },
          {
            "enum": ["desc", "asc"],
            "type": "string",
            "default": "desc",
            "description": "sort by",
            "name": "sort_by",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.StudentsAchievementReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/students/{id}": {
      "get": {
        "description": "get student report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "get student report",
        "operationId": "getStudentAchievementReport",
        "parameters": [
          {
            "type": "string",
            "description": "student id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "teacher_id",
            "name": "teacher_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "class_id",
            "name": "class_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "lesson plan id",
            "name": "lesson_plan_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.StudentAchievementReportResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/reports/teachers/{id}": {
      "get": {
        "description": "get teacher report",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "get teacher report",
        "operationId": "getTeacherReport",
        "parameters": [
          {
            "type": "string",
            "description": "teacher id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.TeacherReport"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules": {
      "get": {
        "description": "query schedule",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "querySchedule",
        "operationId": "querySchedule",
        "parameters": [
          {
            "type": "string",
            "description": "teacher name",
            "name": "teacher_name",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "time zone offset",
            "name": "time_zone_offset",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "search schedules by start_at",
            "name": "start_at",
            "in": "query"
          },
          {
            "enum": ["create_at", "-create_at", "start_at", "-start_at"],
            "type": "string",
            "description": "order by",
            "name": "order_by",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "page index, not paging if page \u003c=0",
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "records per page, not paging if page_size \u003c= 0",
            "name": "page_size",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.SchedulePageView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "add a schedule data",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "addSchedule",
        "operationId": "addSchedule",
        "parameters": [
          {
            "description": "schedule data to add",
            "name": "scheduleData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ScheduleAddView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.SuccessRequestResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/api.ConflictResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/{schedule_id}": {
      "get": {
        "description": "get schedule by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "getScheduleByID",
        "operationId": "getScheduleByID",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ScheduleDetailsView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "update a schedule data",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "updateSchedule",
        "operationId": "updateSchedule",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          },
          {
            "description": "schedule data to update",
            "name": "scheduleData",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ScheduleUpdateView"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.SuccessRequestResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/api.ConflictResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "delete a schedule data",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "deleteSchedule",
        "operationId": "deleteSchedule",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          },
          {
            "enum": ["only_current", "with_following"],
            "type": "string",
            "description": "repeat edit options",
            "name": "repeat_edit_options",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/{schedule_id}/live/token": {
      "get": {
        "description": "get schedule live token",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "getScheduleLiveToken",
        "operationId": "getScheduleLiveToken",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          },
          {
            "enum": ["preview", "live"],
            "type": "string",
            "description": "live token type",
            "name": "live_token_type",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.LiveTokenView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/{schedule_id}/real_time": {
      "get": {
        "description": "get schedule real-time status",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "get schedule real-time status",
        "operationId": "getScheduleRealTimeStatus",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ScheduleRealTimeView"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules/{schedule_id}/status": {
      "put": {
        "description": "update schedule status",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "updateStatus",
        "operationId": "updateStatus",
        "parameters": [
          {
            "type": "string",
            "description": "schedule id",
            "name": "schedule_id",
            "in": "path",
            "required": true
          },
          {
            "enum": ["NotStart", "Started", "Closed"],
            "type": "string",
            "description": "schedule status",
            "name": "status",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules_lesson_plans": {
      "get": {
        "description": "get lessonPlans by teacher and class",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["reports"],
        "summary": "get lessonPlans by teacher and class",
        "operationId": "getLessonPlans",
        "parameters": [
          {
            "type": "string",
            "description": "teacher id",
            "name": "teacher_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "class id",
            "name": "class_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.ScheduleShortInfo"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules_time_view": {
      "get": {
        "description": "get schedule time view",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "getScheduleTimeView",
        "operationId": "getScheduleTimeView",
        "parameters": [
          {
            "enum": ["day", "work_week", "week", "month", "year"],
            "type": "string",
            "description": "search schedules by view_type",
            "name": "view_type",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "search schedules by time_at",
            "name": "time_at",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "time zone offset",
            "name": "time_zone_offset",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "school ids,separated by comma",
            "name": "school_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "teacher id,separated by comma",
            "name": "teacher_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "class id,separated by comma",
            "name": "class_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "subject id,separated by comma",
            "name": "subject_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "program id,separated by comma",
            "name": "program_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ScheduleListView"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/schedules_time_view/dates": {
      "get": {
        "description": "get schedules dates(format:2006-01-02)",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["schedule"],
        "summary": "getScheduledDates",
        "operationId": "getScheduledDates",
        "parameters": [
          {
            "enum": ["day", "work_week", "week", "month", "year"],
            "type": "string",
            "description": "search schedules by view_type",
            "name": "view_type",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "search schedules by time_at",
            "name": "time_at",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "time zone offset",
            "name": "time_zone_offset",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "school ids,separated by comma",
            "name": "school_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "teacher id,separated by comma",
            "name": "teacher_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "class id,separated by comma",
            "name": "class_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "subject id,separated by comma",
            "name": "subject_ids",
            "in": "query"
          },
          {
            "type": "string",
            "description": "program id,separated by comma",
            "name": "program_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/api.ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/skills": {
      "get": {
        "description": "get skill",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["skill"],
        "summary": "getSkill",
        "operationId": "getSkill",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "program_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "developmental id",
            "name": "developmental_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.Skill"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "addSkill",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["skill"],
        "summary": "addSkill",
        "operationId": "addSkill",
        "parameters": [
          {
            "description": "skill",
            "name": "skill",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.Skill"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/skills/{id}": {
      "get": {
        "description": "get skill by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["skill"],
        "summary": "getSkillByID",
        "operationId": "getSkillByID",
        "parameters": [
          {
            "type": "string",
            "description": "skill id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Skill"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updateSkill",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["skill"],
        "summary": "updateSkill",
        "operationId": "updateSkill",
        "parameters": [
          {
            "type": "string",
            "description": "skill id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "skill",
            "name": "skill",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.Skill"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deleteSkill",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["skill"],
        "summary": "deleteSkill",
        "operationId": "deleteSkill",
        "parameters": [
          {
            "type": "string",
            "description": "skill id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/subjects": {
      "get": {
        "description": "get subjects",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["subject"],
        "summary": "getSubject",
        "operationId": "getSubject",
        "parameters": [
          {
            "type": "string",
            "description": "program id",
            "name": "program_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.Subject"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "addSubject",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["subject"],
        "summary": "addSubject",
        "operationId": "addSubject",
        "parameters": [
          {
            "description": "subject",
            "name": "subject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.Subject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/subjects/{id}": {
      "get": {
        "description": "get subjects by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["subject"],
        "summary": "getSubjectByID",
        "operationId": "getSubjectByID",
        "parameters": [
          {
            "type": "string",
            "description": "subject id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Subject"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "put": {
        "description": "updateSubject",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["subject"],
        "summary": "updateSubject",
        "operationId": "updateSubject",
        "parameters": [
          {
            "type": "string",
            "description": "subject id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "subject",
            "name": "subject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.Subject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "delete": {
        "description": "deleteSubject",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["subject"],
        "summary": "deleteSubject",
        "operationId": "deleteSubject",
        "parameters": [
          {
            "type": "string",
            "description": "subject id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/user_settings": {
      "get": {
        "description": "get user setting by user id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["userSetting"],
        "summary": "getUserSettingByOperator",
        "operationId": "getUserSettingByOperator",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.UserSettingJsonContent"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      },
      "post": {
        "description": "set user setting",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["userSetting"],
        "summary": "setUserSetting",
        "operationId": "setUserSetting",
        "parameters": [
          {
            "description": "user setting json content",
            "name": "userSetting",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.UserSettingJsonContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.IDResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/users/check_account": {
      "get": {
        "description": "check account register",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["user"],
        "summary": "checkAccount",
        "operationId": "checkAccount",
        "parameters": [
          {
            "type": "string",
            "description": "account",
            "name": "account",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.CheckAccountResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "409": {},
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/users/forgotten_pwd": {
      "post": {
        "description": "forget password",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["user"],
        "summary": "forget password",
        "operationId": "forgottenPassword",
        "parameters": [
          {
            "description": "login by new password and update password",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.ForgottenPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {},
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "description": "user login",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["user"],
        "summary": "login",
        "operationId": "userLogin",
        "parameters": [
          {
            "description": "user login",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.LoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/api.UnAuthorizedResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "description": "user register",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["user"],
        "summary": "register",
        "operationId": "userRegister",
        "parameters": [
          {
            "description": "user register",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.RegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/api.LoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/api.UnAuthorizedResponse"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/api.ConflictResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/users/reset_password": {
      "post": {
        "description": "reset password after login",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["user"],
        "summary": "reset password",
        "operationId": "resetPassword",
        "parameters": [
          {
            "description": "user reset password",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {},
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/users/send_code": {
      "post": {
        "description": "send verify code or uri",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["user"],
        "summary": "invite notify",
        "operationId": "inviteNotify",
        "parameters": [
          {
            "description": "send verify code",
            "name": "outcome",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/api.SendCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {},
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/visibility_settings": {
      "get": {
        "description": "get visibilitySetting",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["visibilitySetting"],
        "summary": "getVisibilitySetting",
        "operationId": "getVisibilitySetting",
        "parameters": [
          {
            "type": "string",
            "description": "content type",
            "name": "content_type",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.VisibilitySetting"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/api.BadRequestResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/visibility_settings/{id}": {
      "get": {
        "description": "get visibilitySetting by id",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["visibilitySetting"],
        "summary": "getVisibilitySettingByID",
        "operationId": "getVisibilitySettingByID",
        "parameters": [
          {
            "type": "string",
            "description": "visibilitySetting id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.VisibilitySetting"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/api.NotFoundResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/api.InternalServerErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "api.Age": {
      "type": "object",
      "properties": {
        "age_id": {
          "type": "string"
        },
        "age_name": {
          "type": "string"
        }
      }
    },
    "api.BadRequestResponse": {
      "$ref": "#/definitions/api.Response"
    },
    "api.CheckAccountResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "api.ConflictResponse": {
      "$ref": "#/definitions/api.Response"
    },
    "api.CreateContentResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "api.CreateFolderResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "api.Developmental": {
      "type": "object",
      "properties": {
        "developmental_id": {
          "type": "string"
        },
        "developmental_name": {
          "type": "string"
        }
      }
    },
    "api.FolderItemsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FolderItem"
          }
        }
      }
    },
    "api.FolderItemsResponseWithTotal": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FolderItem"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "api.ForbiddenResponse": {
      "$ref": "#/definitions/api.Response"
    },
    "api.ForgottenPasswordRequest": {
      "type": "object",
      "properties": {
        "auth_code": {
          "type": "string"
        },
        "auth_to": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "api.Grade": {
      "type": "object",
      "properties": {
        "grade_id": {
          "type": "string"
        },
        "grade_name": {
          "type": "string"
        }
      }
    },
    "api.IDResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "api.InternalServerErrorResponse": {
      "$ref": "#/definitions/api.Response"
    },
    "api.LoginRequest": {
      "type": "object",
      "properties": {
        "auth_code": {
          "type": "string"
        },
        "auth_to": {
          "type": "string"
        },
        "auth_type": {
          "type": "string"
        }
      }
    },
    "api.LoginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "api.NotFoundResponse": {
      "$ref": "#/definitions/api.Response"
    },
    "api.OutcomeBulkRejectRequest": {
      "type": "object",
      "properties": {
        "outcome_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reject_reason": {
          "type": "string"
        }
      }
    },
    "api.OutcomeCreateResponse": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ancestor_id": {
          "type": "string"
        },
        "assumed": {
          "type": "boolean"
        },
        "author_id": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "created_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "developmental": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "estimated_time": {
          "type": "integer"
        },
        "grade": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "locked_by": {
          "type": "string"
        },
        "organization_id": {
          "type": "string"
        },
        "organization_name": {
          "type": "string"
        },
        "outcome_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "program": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "publish_scope": {
          "type": "string"
        },
        "publish_status": {
          "type": "string"
        },
        "reject_reason": {
          "type": "string"
        },
        "shortcode": {
          "type": "string"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source_id": {
          "type": "string"
        },
        "subject": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "updated_at": {
          "type": "integer"
        }
      }
    },
    "api.OutcomeCreateView": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assumed": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "developmental": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "estimated_time": {
          "type": "integer"
        },
        "grade": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "organization_id": {
          "type": "string"
        },
        "outcome_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "program": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api.OutcomeIDList": {
      "type": "object",
      "properties": {
        "outcome_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "api.OutcomeRejectReq": {
      "type": "object",
      "properties": {
        "reject_reason": {
          "type": "string"
        }
      }
    },
    "api.OutcomeSearchResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api.OutcomeView"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "api.OutcomeView": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api.Age"
          }
        },
        "ancestor_id": {
          "type": "string"
        },
        "assumed": {
          "type": "boolean"
        },
        "author_id": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "created_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "developmental": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api.Developmental"
          }
        },
        "estimated_time": {
          "type": "integer"
        },
        "grade": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api.Grade"
          }
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "latest_id": {
          "type": "string"
        },
        "locked_by": {
          "type": "string"
        },
        "organization_id": {
          "type": "string"
        },
        "organization_name": {
          "type": "string"
        },
        "outcome_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "program": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api.Program"
          }
        },
        "publish_scope": {
          "type": "string"
        },
        "publish_status": {
          "type": "string"
        },
        "reject_reason": {
          "type": "string"
        },
        "shortcode": {
          "type": "string"
        },
        "skills": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api.Skill"
          }
        },
        "source_id": {
          "type": "string"
        },
        "subject": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/api.Subject"
          }
        },
        "update_at": {
          "type": "integer"
        }
      }
    },
    "api.Program": {
      "type": "object",
      "properties": {
        "program_id": {
          "type": "string"
        },
        "program_name": {
          "type": "string"
        }
      }
    },
    "api.PublishContentRequest": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "string"
        }
      }
    },
    "api.PublishOutcomeReq": {
      "type": "object",
      "properties": {
        "scope": {
          "type": "string"
        }
      }
    },
    "api.RegisterRequest": {
      "type": "object",
      "properties": {
        "account": {
          "description": "phone number for now 当前是电话号码",
          "type": "string"
        },
        "act_type": {
          "description": "register manner 注册类型",
          "type": "string"
        },
        "auth_code": {
          "description": "verification code 验证码",
          "type": "string"
        },
        "password": {
          "description": "password 密码",
          "type": "string"
        }
      }
    },
    "api.RejectReasonBulkRequest": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reject_reason": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remark": {
          "type": "string"
        }
      }
    },
    "api.RejectReasonRequest": {
      "type": "object",
      "properties": {
        "reject_reason": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remark": {
          "type": "string"
        }
      }
    },
    "api.ResetPasswordRequest": {
      "type": "object",
      "properties": {
        "new_password": {
          "type": "string"
        },
        "old_password": {
          "type": "string"
        }
      }
    },
    "api.Response": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        },
        "label": {
          "type": "string",
          "example": "unknown"
        }
      }
    },
    "api.SendCodeRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        }
      }
    },
    "api.SignatureResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "api.Skill": {
      "type": "object",
      "properties": {
        "skill_id": {
          "type": "string"
        },
        "skill_name": {
          "type": "string"
        }
      }
    },
    "api.Subject": {
      "type": "object",
      "properties": {
        "subject_id": {
          "type": "string"
        },
        "subject_name": {
          "type": "string"
        }
      }
    },
    "api.SuccessRequestResponse": {
      "$ref": "#/definitions/api.Response"
    },
    "api.TokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "api.UnAuthorizedResponse": {
      "$ref": "#/definitions/api.Response"
    },
    "api.contentBulkOperateRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.ActivityFlashCards": {
      "type": "object",
      "properties": {
        "card_number": {
          "type": "integer"
        },
        "click_answer_time_items": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "play_records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ActivityFlashCardsPlayRecord"
          }
        }
      }
    },
    "entity.ActivityFlashCardsPlayRecord": {
      "type": "object",
      "properties": {
        "correct_cards_count": {
          "type": "integer"
        },
        "duration": {
          "type": "integer"
        },
        "end_time": {
          "type": "integer"
        },
        "start_time": {
          "type": "integer"
        }
      }
    },
    "entity.ActivityImageParing": {
      "type": "object",
      "properties": {
        "paris_number": {
          "type": "integer"
        },
        "play_records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ActivityImageParingPlayRecord"
          }
        },
        "play_times": {
          "type": "integer"
        }
      }
    },
    "entity.ActivityImageParingPlayRecord": {
      "type": "object",
      "properties": {
        "correct_pairs_count": {
          "type": "integer"
        },
        "duration": {
          "type": "integer"
        },
        "end_time": {
          "type": "integer"
        },
        "start_time": {
          "type": "integer"
        }
      }
    },
    "entity.ActivityImageSequencing": {
      "type": "object",
      "properties": {
        "cards_number": {
          "type": "integer"
        },
        "click_answer_time_items": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "play_records": {
          "type": "object",
          "$ref": "#/definitions/entity.ActivityImageSequencingPlayRecord"
        },
        "play_times": {
          "type": "integer"
        }
      }
    },
    "entity.ActivityImageSequencingPlayRecord": {
      "type": "object",
      "properties": {
        "correct_cards_count": {
          "type": "integer"
        },
        "duration": {
          "type": "integer"
        },
        "end_time": {
          "type": "integer"
        },
        "start_time": {
          "type": "integer"
        }
      }
    },
    "entity.ActivityMemoryGame": {
      "type": "object",
      "properties": {
        "play_records": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ActivityMemoryGamePlayRecord"
          }
        },
        "play_times": {
          "type": "integer"
        }
      }
    },
    "entity.ActivityMemoryGamePlayRecord": {
      "type": "object",
      "properties": {
        "clicks_count": {
          "type": "integer"
        },
        "duration": {
          "type": "integer"
        },
        "end_time": {
          "type": "integer"
        },
        "start_time": {
          "type": "integer"
        }
      }
    },
    "entity.AddAssessmentRequest": {
      "type": "object",
      "properties": {
        "attendance_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "class_end_time": {
          "type": "integer"
        },
        "class_length": {
          "type": "integer"
        },
        "schedule_id": {
          "type": "string"
        }
      }
    },
    "entity.AddAssessmentResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "entity.AddAuthedContentRequest": {
      "type": "object",
      "properties": {
        "content_id": {
          "type": "string"
        },
        "from_folder_id": {
          "type": "string"
        },
        "org_id": {
          "type": "string"
        }
      }
    },
    "entity.Age": {
      "type": "object",
      "properties": {
        "createAt": {
          "type": "integer"
        },
        "createID": {
          "type": "string"
        },
        "deleteAt": {
          "type": "integer"
        },
        "deleteID": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "updateAt": {
          "type": "integer"
        },
        "updateID": {
          "type": "string"
        }
      }
    },
    "entity.AssessmentAttendanceView": {
      "type": "object",
      "properties": {
        "checked": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.AssessmentDetailView": {
      "type": "object",
      "properties": {
        "attendances": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.AssessmentAttendanceView"
          }
        },
        "class_end_time": {
          "type": "integer"
        },
        "class_length": {
          "type": "integer"
        },
        "complete_time": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "number_of_activities": {
          "type": "integer"
        },
        "number_of_outcomes": {
          "type": "integer"
        },
        "outcome_attendance_maps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.OutcomeAttendanceMapView"
          }
        },
        "status": {
          "type": "string"
        },
        "subject": {
          "type": "object",
          "$ref": "#/definitions/entity.AssessmentSubject"
        },
        "teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.AssessmentTeacher"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "entity.AssessmentListView": {
      "type": "object",
      "properties": {
        "class_end_time": {
          "type": "integer"
        },
        "complete_time": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "program": {
          "type": "object",
          "$ref": "#/definitions/entity.AssessmentProgram"
        },
        "status": {
          "type": "string"
        },
        "subject": {
          "type": "object",
          "$ref": "#/definitions/entity.AssessmentSubject"
        },
        "teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.AssessmentTeacher"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "entity.AssessmentProgram": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.AssessmentSubject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.AssessmentTeacher": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.AuthedContentRecordInfo": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "age_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "author": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "content_id": {
          "type": "string"
        },
        "content_type": {
          "type": "integer"
        },
        "content_type_name": {
          "type": "string"
        },
        "create_at": {
          "type": "integer"
        },
        "created_at": {
          "type": "integer"
        },
        "creator": {
          "type": "string"
        },
        "creator_name": {
          "description": "AuthorName string `json:\"author_name\"`",
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "delete_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "developmental": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "developmental_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "draw_activity": {
          "type": "boolean"
        },
        "duration": {
          "type": "integer"
        },
        "extra": {
          "type": "string"
        },
        "from_folder_id": {
          "type": "string"
        },
        "grade": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "grade_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "is_mine": {
          "type": "boolean"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "latest_id": {
          "type": "string"
        },
        "lesson_type": {
          "type": "string"
        },
        "lesson_type_name": {
          "type": "string"
        },
        "locked_by": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "org": {
          "type": "string"
        },
        "org_id": {
          "type": "string"
        },
        "org_name": {
          "type": "string"
        },
        "outcome_entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.Outcome"
          }
        },
        "outcomes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "program": {
          "type": "string"
        },
        "program_name": {
          "type": "string"
        },
        "publish_scope": {
          "type": "string"
        },
        "publish_scope_name": {
          "type": "string"
        },
        "publish_status": {
          "type": "string"
        },
        "record_id": {
          "type": "string"
        },
        "reject_reason": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remark": {
          "type": "string"
        },
        "self_study": {
          "type": "boolean"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "skills_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source_id": {
          "type": "string"
        },
        "source_type": {
          "type": "string"
        },
        "subject": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "suggest_time": {
          "type": "integer"
        },
        "teacher_manual": {
          "type": "string"
        },
        "teacher_manual_name": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        },
        "version": {
          "type": "integer"
        }
      }
    },
    "entity.AuthedContentRecordInfoResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.AuthedContentRecordInfo"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.AuthedOrgList": {
      "type": "object",
      "properties": {
        "orgs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.OrganizationInfo"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.BatchAddAuthedContentRequest": {
      "type": "object",
      "properties": {
        "content_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "folder_id": {
          "type": "string"
        },
        "org_id": {
          "type": "string"
        }
      }
    },
    "entity.BatchDeleteAuthedContentByOrgsRequest": {
      "type": "object",
      "properties": {
        "content_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "folder_i_ds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "org_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.ClassType": {
      "type": "object",
      "properties": {
        "createAt": {
          "type": "integer"
        },
        "createID": {
          "type": "string"
        },
        "deleteAt": {
          "type": "integer"
        },
        "deleteID": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "updateAt": {
          "type": "integer"
        },
        "updateID": {
          "type": "string"
        }
      }
    },
    "entity.ContentInfoWithDetails": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "age_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "author": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "content_type": {
          "type": "integer"
        },
        "content_type_name": {
          "type": "string"
        },
        "created_at": {
          "type": "integer"
        },
        "creator": {
          "type": "string"
        },
        "creator_name": {
          "description": "AuthorName string `json:\"author_name\"`",
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "developmental": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "developmental_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "draw_activity": {
          "type": "boolean"
        },
        "extra": {
          "type": "string"
        },
        "grade": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "grade_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "is_mine": {
          "type": "boolean"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "latest_id": {
          "type": "string"
        },
        "lesson_type": {
          "type": "string"
        },
        "lesson_type_name": {
          "type": "string"
        },
        "locked_by": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "org": {
          "type": "string"
        },
        "org_name": {
          "type": "string"
        },
        "outcome_entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.Outcome"
          }
        },
        "outcomes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "program": {
          "type": "string"
        },
        "program_name": {
          "type": "string"
        },
        "publish_scope": {
          "type": "string"
        },
        "publish_scope_name": {
          "type": "string"
        },
        "publish_status": {
          "type": "string"
        },
        "reject_reason": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remark": {
          "type": "string"
        },
        "self_study": {
          "type": "boolean"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "skills_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source_id": {
          "type": "string"
        },
        "source_type": {
          "type": "string"
        },
        "subject": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subject_name": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "suggest_time": {
          "type": "integer"
        },
        "teacher_manual": {
          "type": "string"
        },
        "teacher_manual_name": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        },
        "version": {
          "type": "integer"
        }
      }
    },
    "entity.ContentInfoWithDetailsResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ContentInfoWithDetails"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.ContentStatisticsInfo": {
      "type": "object",
      "properties": {
        "outcomes_count": {
          "type": "integer"
        },
        "subcontent_count": {
          "type": "integer"
        }
      }
    },
    "entity.CreateContentRequest": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "content_type": {
          "type": "integer"
        },
        "data": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "developmental": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "draw_activity": {
          "type": "boolean"
        },
        "extra": {
          "type": "string"
        },
        "grade": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lesson_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "outcomes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "program": {
          "type": "string"
        },
        "publish_scope": {
          "type": "string"
        },
        "self_study": {
          "type": "boolean"
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "source_type": {
          "type": "string"
        },
        "subject": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "suggest_time": {
          "type": "integer"
        },
        "teacher_manual": {
          "type": "string"
        },
        "teacher_manual_name": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        }
      }
    },
    "entity.CreateFolderItemRequest": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string"
        },
        "owner_type": {
          "type": "integer"
        },
        "parent_folder_id": {
          "description": "ID string `json:\"id\"`",
          "type": "string"
        },
        "partition": {
          "description": "ItemType  ItemType  `json:\"item_type\"`",
          "type": "string"
        }
      }
    },
    "entity.CreateFolderRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "owner_type": {
          "type": "integer"
        },
        "parent_id": {
          "type": "string"
        },
        "partition": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        }
      }
    },
    "entity.CreateH5pEventRequest": {
      "type": "object",
      "properties": {
        "extends": {
          "type": "object",
          "additionalProperties": true
        },
        "local_content_id": {
          "type": "string"
        },
        "local_library_name": {
          "type": "string"
        },
        "local_library_version": {
          "type": "string"
        },
        "material_id": {
          "type": "string"
        },
        "play_id": {
          "type": "string"
        },
        "schedule_id": {
          "type": "string"
        },
        "time": {
          "type": "integer"
        },
        "user_id": {
          "type": "string"
        },
        "verb_id": {
          "type": "string"
        }
      }
    },
    "entity.DeleteAuthedContentRequest": {
      "type": "object",
      "properties": {
        "content_id": {
          "type": "string"
        },
        "org_id": {
          "type": "string"
        }
      }
    },
    "entity.Developmental": {
      "type": "object",
      "properties": {
        "createAt": {
          "type": "integer"
        },
        "createID": {
          "type": "string"
        },
        "deleteAt": {
          "type": "integer"
        },
        "deleteID": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "updateAt": {
          "type": "integer"
        },
        "updateID": {
          "type": "string"
        }
      }
    },
    "entity.FolderContent": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "content_type": {
          "type": "integer"
        },
        "content_type_name": {
          "type": "string"
        },
        "create_at": {
          "type": "integer"
        },
        "data": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "dir_path": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "items_count": {
          "type": "integer"
        },
        "keywords": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "publish_status": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "update_at": {
          "type": "integer"
        }
      }
    },
    "entity.FolderContentInfoWithDetailsResponse": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FolderContent"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.FolderIdWithFileType": {
      "type": "object",
      "properties": {
        "folder_file_type": {
          "type": "string",
          "enum": ["content", "folder"]
        },
        "id": {
          "type": "string"
        }
      }
    },
    "entity.FolderItem": {
      "type": "object",
      "properties": {
        "create_at": {
          "type": "integer"
        },
        "creator": {
          "type": "string"
        },
        "dir_path": {
          "type": "string"
        },
        "editor": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "item_type": {
          "type": "integer"
        },
        "items_count": {
          "type": "integer"
        },
        "link": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "owner_type": {
          "type": "integer"
        },
        "parent_id": {
          "type": "string"
        },
        "partition": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "update_at": {
          "type": "integer"
        }
      }
    },
    "entity.FolderItemInfo": {
      "type": "object",
      "properties": {
        "available": {
          "type": "integer"
        },
        "create_at": {
          "type": "integer"
        },
        "creator": {
          "type": "string"
        },
        "dir_path": {
          "type": "string"
        },
        "editor": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "item_type": {
          "type": "integer"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FolderItem"
          }
        },
        "items_count": {
          "type": "integer"
        },
        "link": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "owner_type": {
          "type": "integer"
        },
        "parent_id": {
          "type": "string"
        },
        "partition": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        },
        "update_at": {
          "type": "integer"
        }
      }
    },
    "entity.FolderShareRecord": {
      "type": "object",
      "properties": {
        "folder_id": {
          "type": "string"
        },
        "orgs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.OrganizationInfo"
          }
        }
      }
    },
    "entity.FolderShareRecords": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FolderShareRecord"
          }
        }
      }
    },
    "entity.GetStudentPerformanceH5PReportResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ListStudentPerformanceH5PReportItem"
          }
        }
      }
    },
    "entity.GetStudentPerformanceReportResponse": {
      "type": "object",
      "properties": {
        "assessment_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.StudentPerformanceReportScheduleItem"
          }
        }
      }
    },
    "entity.Grade": {
      "type": "object",
      "properties": {
        "createAt": {
          "type": "integer"
        },
        "createID": {
          "type": "string"
        },
        "deleteAt": {
          "type": "integer"
        },
        "deleteID": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "updateAt": {
          "type": "integer"
        },
        "updateID": {
          "type": "string"
        }
      }
    },
    "entity.LessonType": {
      "type": "object",
      "properties": {
        "createAt": {
          "type": "integer"
        },
        "createID": {
          "type": "string"
        },
        "deleteAt": {
          "type": "integer"
        },
        "deleteID": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "updateAt": {
          "type": "integer"
        },
        "updateID": {
          "type": "string"
        }
      }
    },
    "entity.ListAssessmentsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.AssessmentListView"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.ListStudentPerformanceH5PReportItem": {
      "type": "object",
      "properties": {
        "activity_flash_cards": {
          "type": "object",
          "$ref": "#/definitions/entity.ActivityFlashCards"
        },
        "activity_image_paring": {
          "type": "object",
          "$ref": "#/definitions/entity.ActivityImageParing"
        },
        "activity_image_sequencing": {
          "type": "object",
          "$ref": "#/definitions/entity.ActivityImageSequencing"
        },
        "activity_memory_game": {
          "type": "object",
          "$ref": "#/definitions/entity.ActivityMemoryGame"
        },
        "activity_type": {
          "type": "string"
        },
        "avg_spent_time": {
          "type": "integer"
        },
        "material_id": {
          "type": "string"
        },
        "material_name": {
          "type": "string"
        },
        "total_spent_time": {
          "type": "integer"
        }
      }
    },
    "entity.ListStudentsPerformanceH5PReportResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.StudentsPerformanceH5PReportItem"
          }
        }
      }
    },
    "entity.ListStudentsPerformanceReportResponse": {
      "type": "object",
      "properties": {
        "assessment_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.StudentPerformanceReportItem"
          }
        }
      }
    },
    "entity.LiveTokenView": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "entity.MoveFolderIDBulkRequest": {
      "type": "object",
      "properties": {
        "dist": {
          "type": "string"
        },
        "folder_info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.FolderIdWithFileType"
          }
        },
        "owner_type": {
          "type": "integer"
        },
        "partition": {
          "type": "string"
        }
      }
    },
    "entity.MoveFolderRequest": {
      "type": "object",
      "properties": {
        "dist": {
          "type": "string"
        },
        "folder_file_type": {
          "type": "string",
          "enum": ["content", "folder"]
        },
        "id": {
          "type": "string"
        },
        "owner_type": {
          "type": "integer"
        },
        "partition": {
          "type": "string"
        }
      }
    },
    "entity.OrganizationInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.OrganizationProperty": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["normal", "headquarters"]
        }
      }
    },
    "entity.Outcome": {
      "type": "object",
      "properties": {
        "age": {
          "type": "string"
        },
        "ancestor_id": {
          "type": "string"
        },
        "assumed": {
          "type": "boolean"
        },
        "author": {
          "type": "string"
        },
        "author_name": {
          "type": "string"
        },
        "created_at": {
          "type": "integer"
        },
        "deleted_at": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        },
        "developmental": {
          "type": "string"
        },
        "extra": {
          "type": "integer"
        },
        "grade": {
          "type": "string"
        },
        "keywords": {
          "type": "string"
        },
        "latest_id": {
          "type": "string"
        },
        "locked_by": {
          "type": "string"
        },
        "organization_id": {
          "type": "string"
        },
        "outcome_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "program": {
          "type": "string"
        },
        "publish_scope": {
          "type": "string"
        },
        "publish_status": {
          "type": "string"
        },
        "reject_reason": {
          "type": "string"
        },
        "shortcode": {
          "type": "string"
        },
        "skills": {
          "type": "string"
        },
        "source_id": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "updated_at": {
          "type": "integer"
        },
        "version": {
          "type": "integer"
        }
      }
    },
    "entity.OutcomeAttendanceMap": {
      "type": "object",
      "properties": {
        "attendance_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "none_achieved": {
          "type": "boolean"
        },
        "outcome_id": {
          "type": "string"
        },
        "skip": {
          "type": "boolean"
        }
      }
    },
    "entity.OutcomeAttendanceMapView": {
      "type": "object",
      "properties": {
        "assumed": {
          "type": "boolean"
        },
        "attendance_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "none_achieved": {
          "type": "boolean"
        },
        "outcome_id": {
          "type": "string"
        },
        "outcome_name": {
          "type": "string"
        },
        "skip": {
          "type": "boolean"
        }
      }
    },
    "entity.Program": {
      "type": "object",
      "properties": {
        "createAt": {
          "type": "integer"
        },
        "createID": {
          "type": "string"
        },
        "deleteAt": {
          "type": "integer"
        },
        "deleteID": {
          "type": "string"
        },
        "group_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "org_type": {
          "type": "string"
        },
        "updateAt": {
          "type": "integer"
        },
        "updateID": {
          "type": "string"
        }
      }
    },
    "entity.RemoveItemBulk": {
      "type": "object",
      "properties": {
        "folder_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.RepeatDaily": {
      "type": "object",
      "properties": {
        "end": {
          "type": "object",
          "$ref": "#/definitions/entity.RepeatEnd"
        },
        "interval": {
          "type": "integer"
        }
      }
    },
    "entity.RepeatEnd": {
      "type": "object",
      "properties": {
        "after_count": {
          "type": "integer"
        },
        "after_time": {
          "type": "integer"
        },
        "type": {
          "type": "string",
          "enum": ["never", "after_count", "after_time"]
        }
      }
    },
    "entity.RepeatMonthly": {
      "type": "object",
      "properties": {
        "end": {
          "type": "object",
          "$ref": "#/definitions/entity.RepeatEnd"
        },
        "interval": {
          "type": "integer"
        },
        "on_date_day": {
          "type": "integer"
        },
        "on_type": {
          "type": "string",
          "enum": ["date", "week"]
        },
        "on_week": {
          "type": "string",
          "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
        },
        "on_week_seq": {
          "type": "string",
          "enum": ["first", "second", "third", "fourth", "last"]
        }
      }
    },
    "entity.RepeatOptions": {
      "type": "object",
      "properties": {
        "daily": {
          "type": "object",
          "$ref": "#/definitions/entity.RepeatDaily"
        },
        "monthly": {
          "type": "object",
          "$ref": "#/definitions/entity.RepeatMonthly"
        },
        "type": {
          "type": "string",
          "enum": ["daily", "weekly", "monthly", "yearly"]
        },
        "weekly": {
          "type": "object",
          "$ref": "#/definitions/entity.RepeatWeekly"
        },
        "yearly": {
          "type": "object",
          "$ref": "#/definitions/entity.RepeatYearly"
        }
      }
    },
    "entity.RepeatWeekly": {
      "type": "object",
      "properties": {
        "end": {
          "type": "object",
          "$ref": "#/definitions/entity.RepeatEnd"
        },
        "interval": {
          "type": "integer"
        },
        "on": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
          }
        }
      }
    },
    "entity.RepeatYearly": {
      "type": "object",
      "properties": {
        "end": {
          "type": "object",
          "$ref": "#/definitions/entity.RepeatEnd"
        },
        "interval": {
          "type": "integer"
        },
        "on_date_day": {
          "type": "integer"
        },
        "on_date_month": {
          "type": "integer"
        },
        "on_type": {
          "type": "string",
          "enum": ["date", "week"]
        },
        "on_week": {
          "type": "string",
          "enum": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
        },
        "on_week_month": {
          "type": "integer"
        },
        "on_week_seq": {
          "type": "string",
          "enum": ["first", "second", "third", "fourth", "last"]
        }
      }
    },
    "entity.ScheduleAccessibleUserView": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleAddView": {
      "type": "object",
      "required": ["class_id", "end_at", "start_at", "title"],
      "properties": {
        "attachment": {
          "type": "object",
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "class_id": {
          "type": "string"
        },
        "class_roster_student_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "class_roster_teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "class_type": {
          "type": "string",
          "enum": ["OnlineClass", "OfflineClass", "Homework", "Task"]
        },
        "description": {
          "type": "string"
        },
        "due_at": {
          "type": "integer"
        },
        "end_at": {
          "type": "integer"
        },
        "is_all_day": {
          "type": "boolean"
        },
        "is_force": {
          "type": "boolean"
        },
        "is_repeat": {
          "type": "boolean"
        },
        "lesson_plan_id": {
          "type": "string"
        },
        "org_id": {
          "type": "string"
        },
        "participants_student_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "participants_teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "program_id": {
          "type": "string"
        },
        "repeat": {
          "type": "object",
          "$ref": "#/definitions/entity.RepeatOptions"
        },
        "start_at": {
          "type": "integer"
        },
        "subject_id": {
          "type": "string"
        },
        "time_zone_offset": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        }
      }
    },
    "entity.ScheduleDetailsView": {
      "type": "object",
      "properties": {
        "attachment": {
          "type": "object",
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "class": {
          "type": "object",
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "class_roster_students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleAccessibleUserView"
          }
        },
        "class_roster_teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleAccessibleUserView"
          }
        },
        "class_type": {
          "type": "string",
          "enum": ["OnlineClass", "OfflineClass", "Homework", "Task"]
        },
        "description": {
          "type": "string"
        },
        "due_at": {
          "type": "integer"
        },
        "end_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "is_all_day": {
          "type": "boolean"
        },
        "is_repeat": {
          "type": "boolean"
        },
        "lesson_plan": {
          "type": "object",
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "member_teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleShortInfo"
          }
        },
        "org_id": {
          "type": "string"
        },
        "participants_students": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleAccessibleUserView"
          }
        },
        "participants_teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleAccessibleUserView"
          }
        },
        "program": {
          "type": "object",
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "real_time_status": {
          "type": "object",
          "$ref": "#/definitions/entity.ScheduleRealTimeView"
        },
        "repeat": {
          "type": "object",
          "$ref": "#/definitions/entity.RepeatOptions"
        },
        "start_at": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "enum": ["NotStart", "Started", "Closed"]
        },
        "student_count": {
          "type": "integer"
        },
        "subject": {
          "type": "object",
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleShortInfo"
          }
        },
        "title": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        }
      }
    },
    "entity.ScheduleListView": {
      "type": "object",
      "properties": {
        "class_id": {
          "type": "string"
        },
        "class_type": {
          "type": "string",
          "enum": ["OnlineClass", "OfflineClass", "Homework", "Task"]
        },
        "end_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "is_repeat": {
          "type": "boolean"
        },
        "lesson_plan_id": {
          "type": "string"
        },
        "start_at": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "enum": ["NotStart", "Started", "Closed"]
        },
        "title": {
          "type": "string"
        }
      }
    },
    "entity.SchedulePageView": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleSearchView"
          }
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "entity.ScheduleRealTimeView": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "lesson_plan_is_auth": {
          "type": "boolean"
        }
      }
    },
    "entity.ScheduleSearchView": {
      "type": "object",
      "properties": {
        "class": {
          "type": "object",
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "end_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "lesson_plan": {
          "type": "object",
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "member_teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleShortInfo"
          }
        },
        "program": {
          "type": "object",
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "start_at": {
          "type": "integer"
        },
        "student_count": {
          "type": "integer"
        },
        "subject": {
          "type": "object",
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "teachers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ScheduleShortInfo"
          }
        },
        "title": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleShortInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.ScheduleUpdateView": {
      "type": "object",
      "required": ["class_id", "end_at", "start_at", "title"],
      "properties": {
        "attachment": {
          "type": "object",
          "$ref": "#/definitions/entity.ScheduleShortInfo"
        },
        "class_id": {
          "type": "string"
        },
        "class_roster_student_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "class_roster_teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "class_type": {
          "type": "string",
          "enum": ["OnlineClass", "OfflineClass", "Homework", "Task"]
        },
        "description": {
          "type": "string"
        },
        "due_at": {
          "type": "integer"
        },
        "end_at": {
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "is_all_day": {
          "type": "boolean"
        },
        "is_force": {
          "type": "boolean"
        },
        "is_repeat": {
          "type": "boolean"
        },
        "lesson_plan_id": {
          "type": "string"
        },
        "org_id": {
          "type": "string"
        },
        "participants_student_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "participants_teacher_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "program_id": {
          "type": "string"
        },
        "repeat": {
          "type": "object",
          "$ref": "#/definitions/entity.RepeatOptions"
        },
        "repeat_edit_options": {
          "type": "string",
          "enum": ["only_current", "with_following"]
        },
        "start_at": {
          "type": "integer"
        },
        "subject_id": {
          "type": "string"
        },
        "time_zone_offset": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        }
      }
    },
    "entity.ShareFoldersRequest": {
      "type": "object",
      "properties": {
        "folder_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "org_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.Skill": {
      "type": "object",
      "properties": {
        "createAt": {
          "type": "integer"
        },
        "createID": {
          "type": "string"
        },
        "deleteAt": {
          "type": "integer"
        },
        "deleteID": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "updateAt": {
          "type": "integer"
        },
        "updateID": {
          "type": "string"
        }
      }
    },
    "entity.StudentAchievementReportCategoryItem": {
      "type": "object",
      "properties": {
        "achieved_items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "not_achieved_items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "not_attempted_items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "entity.StudentAchievementReportItem": {
      "type": "object",
      "properties": {
        "achieved_count": {
          "type": "integer"
        },
        "attend": {
          "type": "boolean"
        },
        "not_achieved_count": {
          "type": "integer"
        },
        "not_attempted_count": {
          "type": "integer"
        },
        "student_id": {
          "type": "string"
        },
        "student_name": {
          "type": "string"
        }
      }
    },
    "entity.StudentAchievementReportResponse": {
      "type": "object",
      "properties": {
        "assessment_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attend": {
          "type": "boolean"
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.StudentAchievementReportCategoryItem"
          }
        },
        "student_name": {
          "type": "string"
        }
      }
    },
    "entity.StudentPerformanceReportItem": {
      "type": "object",
      "properties": {
        "achieved_count": {
          "type": "integer"
        },
        "achieved_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attend": {
          "type": "boolean"
        },
        "student_id": {
          "type": "string"
        },
        "student_name": {
          "type": "string"
        }
      }
    },
    "entity.StudentPerformanceReportScheduleItem": {
      "type": "object",
      "properties": {
        "achieved_count": {
          "type": "integer"
        },
        "achieved_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attend": {
          "type": "boolean"
        },
        "schedule_id": {
          "type": "string"
        },
        "schedule_start_time": {
          "type": "integer"
        },
        "student_id": {
          "type": "string"
        },
        "student_name": {
          "type": "string"
        }
      }
    },
    "entity.StudentsAchievementReportResponse": {
      "type": "object",
      "properties": {
        "assessment_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.StudentAchievementReportItem"
          }
        }
      }
    },
    "entity.StudentsPerformanceH5PReportItem": {
      "type": "object",
      "properties": {
        "attend": {
          "type": "boolean"
        },
        "spent_time": {
          "type": "integer"
        },
        "student_id": {
          "type": "string"
        },
        "student_name": {
          "type": "string"
        }
      }
    },
    "entity.Subject": {
      "type": "object",
      "properties": {
        "createAt": {
          "type": "integer"
        },
        "createID": {
          "type": "string"
        },
        "deleteAt": {
          "type": "integer"
        },
        "deleteID": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "updateAt": {
          "type": "integer"
        },
        "updateID": {
          "type": "string"
        }
      }
    },
    "entity.TeacherReport": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.TeacherReportCategory"
          }
        }
      }
    },
    "entity.TeacherReportCategory": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "entity.UpdateAssessmentRequest": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": ["save", "complete"]
        },
        "attendance_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "outcome_attendance_maps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.OutcomeAttendanceMap"
          }
        }
      }
    },
    "entity.UpdateFolderRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "thumbnail": {
          "type": "string"
        }
      }
    },
    "entity.UserSettingJsonContent": {
      "type": "object",
      "required": ["cms_page_size"],
      "properties": {
        "cms_page_size": {
          "type": "integer"
        }
      }
    },
    "entity.VisibilitySetting": {
      "type": "object",
      "properties": {
        "createAt": {
          "type": "integer"
        },
        "createID": {
          "type": "string"
        },
        "deleteAt": {
          "type": "integer"
        },
        "deleteID": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "updateAt": {
          "type": "integer"
        },
        "updateID": {
          "type": "string"
        }
      }
    }
  }
}
