{"version":3,"file":"static/js/122.7ef65762.chunk.js","mappings":"iSAkCe,SAASA,IACtB,IAGwB,EAHlBC,GAASC,EAAAA,EAAAA,qBAAoBC,EAAAA,aAC7BC,GAAsBF,EAAAA,EAAAA,qBAAoBG,EAAAA,0BAC5CC,EAAyB,GAC1BF,IACDE,EAAc,UAAGF,EAAoBG,UAAvB,YAMhB,OAJAC,IAAAA,WAAgB,WACVP,GAAQQ,EAAAA,EAAAA,QAAqBC,EAAAA,EAAAA,GAAiBT,EAAOU,MAAM,EAAG,IAAM,OACpEL,GAAgBM,EAAAA,EAAAA,UAAeC,EAAAA,EAAAA,GAAkBP,MACpD,CAACA,EAAgBL,KACb,SAAC,IAAD,IAlCTa,EAAAA,EAAAA,GAAiCC,EAAAA,EAAAA,eAAwB,SAACC,GACxD,GAAKA,EAAL,CACA,IAAQC,EAA8BD,EAA9BC,MAAOC,EAAuBF,EAAvBE,IAAKC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,QAGpBC,EAAUC,QAAOC,EAAAA,EAAAA,GAAEN,EAAuBE,QAAQK,IAAcN,GAAO,IACzEG,IAASD,EAAUA,EAAQC,GAAWT,EAAAA,EAAAA,UAAea,EAAAA,EAAAA,IAASJ,SAGpEP,EAAAA,EAAAA,GAAgCC,EAAAA,EAAAA,MAAe,SAACC,GAC9C,GAAKA,EAAL,CACA,IAAQC,EAAUD,EAAVC,MACFI,EAAUC,QAAOC,EAAAA,EAAAA,GAAEN,IAA0B,IAC/CI,GAAST,EAAAA,EAAAA,UAAec,EAAAA,EAAAA,IAAQL,QAGtCP,EAAAA,EAAAA,GAAqCC,EAAAA,EAAAA,cAAuB,SAACC,GAC3D,GAAKA,EAAL,CACA,IAAQC,EAAeD,EAAfC,MAAOC,EAAQF,EAARE,IACTG,EAAUC,QAAOC,EAAAA,EAAAA,GAAEN,IAA0BC,GAAO,IACtDG,GAAST,EAAAA,EAAAA,UAAea,EAAAA,EAAAA,IAASJ","sources":["main.tsx"],"sourcesContent":["import { apiEmitter, ApiErrorEventData, ApiEvent, ApiInfoEventData, GraphQLErrorEventData } from \"@api/emitter\";\nimport { currentOrganizationState, localeState, useGlobalStateValue } from \"@kl-engineering/frontend-state\";\nimport { LangRecordId, shouldBeLangName } from \"@locale/lang/type\";\nimport { localeManager, t } from \"@locale/LocaleManager\";\nimport { setOrganizationId } from \"@reducers/common\";\nimport { store } from \"@reducers/index\";\nimport { actError, actInfo } from \"@reducers/notify\";\nimport React from \"react\";\nimport App from \"./App\";\nimport \"./index.css\";\n\napiEmitter.on<ApiErrorEventData>(ApiEvent.ResponseError, (e) => {\n  if (!e) return;\n  const { label, msg, data, onError } = e;\n  // 韩国方面说： 他们会在容器外部处理未登录， 不需要通知\n  // if (label === UNAUTHORIZED_LABEL) sendIframeMessage({ type: 'unauthorized', payload: null });\n  const message = String(t(label as LangRecordId, data || undefined) || msg || \"\");\n  if (message) onError ? onError(message) : store.dispatch(actError(message));\n});\n\napiEmitter.on<ApiInfoEventData>(ApiEvent.Info, (e) => {\n  if (!e) return;\n  const { label } = e;\n  const message = String(t(label as LangRecordId) || \"\");\n  if (message) store.dispatch(actInfo(message));\n});\n\napiEmitter.on<GraphQLErrorEventData>(ApiEvent.GraphQLError, (e) => {\n  if (!e) return;\n  const { label, msg } = e;\n  const message = String(t(label as LangRecordId) || msg || \"\");\n  if (message) store.dispatch(actError(message));\n});\n\nexport default function Main() {\n  const locale = useGlobalStateValue(localeState);\n  const currentOrganization = useGlobalStateValue(currentOrganizationState);\n  let organizationId: string = \"\";\n  if(currentOrganization) {\n    organizationId = currentOrganization.id ?? ``;\n  }\n  React.useEffect(() => {\n    if (locale) localeManager.toggle(shouldBeLangName(locale.slice(0, 2) || \"en\"));\n    if (organizationId) store.dispatch(setOrganizationId(organizationId));\n  }, [organizationId, locale]);\n  return <App />;\n}\n"],"names":["Main","locale","useGlobalStateValue","localeState","currentOrganization","currentOrganizationState","organizationId","id","React","localeManager","shouldBeLangName","slice","store","setOrganizationId","apiEmitter","ApiEvent","e","label","msg","data","onError","message","String","t","undefined","actError","actInfo"],"sourceRoot":""}