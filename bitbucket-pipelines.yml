pipelines:
  branches:
    dev/global/alpha:
    - parallel:
      - step:
          name: 'Build NPM Alpha'
          image: node:lts-alpine
          size: 2x
          script:
            - apk update && apk add git --no-cache
            - npm i
            - npm audit fix
            - mv deploy/config/alpha/.env.alpha ./.env.production
            - npm run build
          after-script:
            - BUILD_STATUS="success"
            - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then BUILD_STATUS="failure"; fi
            - pipe: atlassian/slack-notify:1.0.2
              variables:
                WEBHOOK_URL: $WEBHOOK_URL
                PRETEXT: '"[Alpha] $BITBUCKET_REPO_SLUG - Pipeline ${BITBUCKET_GIT_HTTP_ORIGIN}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER}"'
                MESSAGE: 'Alpha build has exited with [$BUILD_STATUS] status'
          caches:
            - nodemodules
          artifacts:
            - build/**/*

      - step:
          name: 'Build NPM Infra'
          image: node:lts-alpine
          size: 2x
          script:
            - apk update && apk add git --no-cache
            - npm i
            - npm audit fix
            - mv deploy/config/sre/.env.alpha ./.env.production
            - npm run build && mv build infra
          after-script:
            - BUILD_STATUS="success"
            - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then BUILD_STATUS="failure"; fi
            - pipe: atlassian/slack-notify:1.0.2
              variables:
                WEBHOOK_URL: $WEBHOOK_URL
                PRETEXT: '"[Alpha] $BITBUCKET_REPO_SLUG - Pipeline ${BITBUCKET_GIT_HTTP_ORIGIN}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER}"'
                MESSAGE: 'Infra build has exited with [$BUILD_STATUS] status'
          caches:
            - nodemodules
          artifacts:
            - infra/**/*
    
    - step:
        name: "Build Infra & Push Image"
        image: python:3.9-alpine
        script:
          - pip3 install -U awscli
          - apk add git --no-cache
          - mv infra deploy/build

          - export BRANCH_TAG=$(echo "$BITBUCKET_BRANCH" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
          - export REPO=$DOCKER_REPO_URL/kidsloop-cms-frontend
          - export TAG=$BRANCH_TAG-INFRA-ALPHA

          - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $DOCKER_REPO_URL
          - docker build -t cms-frontend deploy/

          - docker tag cms-frontend:latest $REPO:$TAG
          - docker tag cms-frontend:latest $REPO:$TAG-latest
          - docker tag cms-frontend:latest $REPO:$TAG-$BITBUCKET_BUILD_NUMBER
          - docker push $REPO:$TAG
          - docker push $REPO:$TAG-latest
          - docker push $REPO:$TAG-$BITBUCKET_BUILD_NUMBER
        after-script:
        - BUILD_STATUS="success"
        - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then BUILD_STATUS="failure"; fi
        - pipe: atlassian/slack-notify:1.0.2
          variables:
            WEBHOOK_URL: $WEBHOOK_URL
            PRETEXT: '"[Alpha] $BITBUCKET_REPO_SLUG - Pipeline ${BITBUCKET_GIT_HTTP_ORIGIN}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER}"'
            MESSAGE: 'Infra image push has exited with [$BUILD_STATUS] status'
        services:
          - docker
    
    - step:
        name: "Sync & Invalidate Alpha"
        image: python:3.9-alpine
        script:
          - pip3 install -U awscli
          - apk add git jq --no-cache

          - assume_role=$(aws sts assume-role --role-arn arn:aws:iam::${ACC_ID}:role/cross_account_deployment_role --role-session-name deployment)
          
          - export AWS_ACCESS_KEY_ID=$(echo $assume_role | jq -r .Credentials.AccessKeyId) && export AWS_SECRET_ACCESS_KEY=$(echo $assume_role | jq -r .Credentials.SecretAccessKey) && export AWS_SESSION_TOKEN=$(echo $assume_role | jq -r .Credentials.SessionToken) && export AWS_DEFAULT_REGION=ap-northeast-2
          
          - aws s3 sync build s3://$S3_BUCKET/alpha/latest

          - aws cloudfront create-invalidation --paths "/*" --distribution-id $CDN_DIST 
          
        after-script:
          - BUILD_STATUS="success"
          - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then BUILD_STATUS="failure"; fi
          - pipe: atlassian/slack-notify:1.0.2
            variables:
              WEBHOOK_URL: $WEBHOOK_URL
              PRETEXT: '"[Alpha] $BITBUCKET_REPO_SLUG - Pipeline ${BITBUCKET_GIT_HTTP_ORIGIN}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER}"'
              MESSAGE: 'S3 sync CDN Invalidation has exited with [$BUILD_STATUS] status'
        
  custom:
    deploy:
    - variables:
          - name: KIDSLOOP_REGION
          - name: KIDSLOOP_ENV

    - step:
        name: 'Build NPM'
        image: node:lts-alpine
        size: 2x
        script:
          - apk update && apk add git --no-cache
          - npm i
          - npm audit fix
          - mv deploy/config/$KIDSLOOP_REGION/.env.$KIDSLOOP_ENV ./.env.production 
          - npm run build
        after-script:
          - BUILD_STATUS="success"
          - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then BUILD_STATUS="failure"; fi
          - pipe: atlassian/slack-notify:1.0.2
            variables:
              WEBHOOK_URL: $WEBHOOK_URL
              PRETEXT: '"[$KIDSLOOP_REGION-$KIDSLOOP_ENV] $BITBUCKET_REPO_SLUG - Pipeline ${BITBUCKET_GIT_HTTP_ORIGIN}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER}"'
              MESSAGE: '$KIDSLOOP_REGION-$KIDSLOOP_ENV build has exited with [$BUILD_STATUS] status'
        caches:
          - nodemodules
        artifacts:
          - build/**/*

    - step:
        name: "Build & Push Docker image"
        image: python:3.9-alpine
        script:
          - pip3 install -U awscli
          - apk add git --no-cache
          - mv build deploy/
          
          - export BRANCH_TAG=$(echo "$BITBUCKET_BRANCH" | sed -E 's/([^0-9a-zA-Z]+)/-/g' | awk '{print tolower($0)}')
          - export REPO=$DOCKER_REPO_URL/kidsloop-cms-frontend      # DOCKER_REPO_URL is workspace wide variable
          - export TAG=$BRANCH_TAG-$KIDSLOOP_REGION-$KIDSLOOP_ENV
          - export COMMIT_TAG=$(git rev-parse --short HEAD)

          - aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin $DOCKER_REPO_URL
          - docker build -t cms-frontend deploy/
          
          - docker tag cms-frontend:latest $REPO:$TAG
          - docker tag cms-frontend:latest $REPO:$TAG-latest
          - docker tag cms-frontend:latest $REPO:$TAG-$BITBUCKET_BUILD_NUMBER
          - docker tag cms-frontend:latest $REPO:$TAG-$COMMIT_TAG
          - docker push $REPO:$TAG
          - docker push $REPO:$TAG-latest
          - docker push $REPO:$TAG-$BITBUCKET_BUILD_NUMBER
          - docker push $REPO:$TAG-$COMMIT_TAG

        after-script:
          - BUILD_STATUS="success"
          - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then BUILD_STATUS="failure"; fi
          - pipe: atlassian/slack-notify:1.0.2
            variables:
              WEBHOOK_URL: $WEBHOOK_URL
              PRETEXT: '"[$KIDSLOOP_REGION-$KIDSLOOP_ENV] $BITBUCKET_REPO_SLUG - Pipeline ${BITBUCKET_GIT_HTTP_ORIGIN}/addon/pipelines/home#!/results/${BITBUCKET_BUILD_NUMBER}"'
              MESSAGE: '$KIDSLOOP_REGION-$KIDSLOOP_ENV image push has exited with [$BUILD_STATUS] status'

        services:
          - docker

definitions:
  caches:
    nodemodules: ./node_modules
